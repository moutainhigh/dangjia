<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dangjia.acg.mapper.basics.IProductMapper">

    <resultMap type="com.dangjia.acg.pojo.basics.LabelPO" id="labelPOPOMap">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="type" column="type"/>
        <result property="createDate" column="createDate"/>
        <result property="modifyDate" column="modifyDate"/>
        <collection property="productPOLists" javaType="ArrayList"
                    column="id" ofType="com.dangjia.acg.pojo.basics.LabelPO"
                    select="com.dangjia.acg.mapper.basics.IProductMapper.queryPOByLabelId"
                    fetchType="lazy">
            <association property="productPO" javaType="com.dangjia.acg.pojo.basics.ProductPO">
                <id property="id" column="id"/>
                <result property="goodsId" column="goods_id"/>
            </association>
        </collection>
    </resultMap>

    <!-- 一对多查询，查询用户及订单明细和商品信息 -->
    <resultMap type="com.dangjia.acg.pojo.basics.ProductPO" id="productPOMap">
        <!-- 用户信息映射 -->
        <id property="id" column="id"/>
        <result property="name" column="name"/>

        <!-- 分类信息 -->
        <association property="goodsCategory" javaType="com.dangjia.acg.pojo.attribute.GoodsCategoryPO">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>

        <!-- 商品信息 -->
        <association property="goods" javaType="com.dangjia.acg.pojo.basics.GoodsPO">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>

        <!-- 单元信息 -->
        <association property="unit" javaType="com.dangjia.acg.pojo.basics.UnitPO">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>

        <!-- 标签信息 -->
        <association property="memberLabel" javaType="com.dangjia.acg.pojo.basics.LabelPO">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>

        <!-- 品牌信息 -->
        <association property="brand" javaType="com.dangjia.acg.modle.brand.Brand">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>

    <sql id="all_columns">
               id,
               name,
               goods_id,
               category_id,
               product_sn,
               image,
               unitId,
               labelId,
               unitName,
               weight,
               type,
               maket,
               cost,
               price,
               profit,
               value_name_arr,
               value_id_arr,
               convert_unit,
               convert_quality,
               create_date,
               istop,
               modify_date
    </sql>
    <sql id="new_columns">
              id as id,
        name as name,
        goods_id as goodsId,
        category_id as categoryId,
        product_sn as productSn,
        image as image,
        unit_id as unitId,
        label_id as labelId,
        unit_name as unitName,
        value_name_arr valueNameArr,
        value_id_arr AS valueIdArr,
        type as type,
        maket,
        istop,
        price as price,
        other_name as otherName,
        create_date as createDate,
        modify_date as modifyDate,
        weight,
        cost,
        profit,
        convert_unit convertUnit,
        convert_quality convertQuality,
        is_influe_warranty_period AS isInflueWarrantyPeriod,
        max_warranty_period_year AS maxWarrantyPeriodYear,
        min_warranty_period_year AS minWarrantyPeriodYear,
        marketing_name AS marketingName,
        cartage_price cartagePrice,
        detail_image detailImage,
        guaranteed_policy guaranteedPolicy,
        refund_policy refundPolicy,
        work_explain as workExplain,
        worker_dec as workerDec,
        worker_standard as workerStandard,
        worker_type_id as workerTypeId,
        last_price as lastPrice,
        last_time as lastTime,
        technology_ids as technologyIds,
        considerations,
        calculate_content calculateContent,
        build_content buildContent,
        is_agency_purchase isAgencyPurchase
    </sql>

    <sql id="all_PaColumns">
               id,
               name,
               product_id,
               attribute_id,
               value_id,
               istop,
               create_date,
               modify_date
    </sql>
    <!-- 删除对象 -->
    <delete id="deleteById" parameterType="java.lang.String">
        DELETE
        FROM dj_basics_product_template
        WHERE id = #{id}
    </delete>
    <!-- 查询所有 -->
    <select id="query" parameterType="java.lang.String" resultType="com.dangjia.acg.modle.basics.Product">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product_template where 1=1
        <if test="category_id!=null and category_id!=''">
            and category_id=#{category_id}
        </if>
        and city_id = #{cityId}
        ORDER BY istop DESC,create_date desc
    </select>


    <!-- 根据商品Id查询所有货品 -->
    <select id="queryByGoodsId" resultType="com.dangjia.acg.modle.basics.Product">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product_template
        where goods_id=#{goodsId} and city_id = #{cityId}
        ORDER BY istop DESC,create_date desc
    </select>
    <!-- 根据货品id查询货品对象 -->
    <select id="getById" resultType="com.dangjia.acg.modle.basics.Product">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product_template
        where id=#{id}
        ORDER BY istop DESC,create_date desc
    </select>

    <!-- 根据标签id查询货品对象 -->
    <select id="queryByLabelId" resultType="com.dangjia.acg.modle.basics.Product">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product_template
        where label_id=#{labelId}
        ORDER BY istop DESC,create_date desc
    </select>

    <!-- 根据标签id查询货品对象 -->
    <select id="queryPOByLabelId" resultMap="productPOMap">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product_template
        where label_id=#{labelId}
        ORDER BY istop DESC,create_date desc
    </select>

    <!-- 根据名称查询 -->
    <select id="queryByName" parameterType="java.lang.String" resultType="com.dangjia.acg.modle.basics.Product">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product_template
        where data_status = 0
        <if test="name!=null and name!=''">
            and
            name=#{name}
        </if>
        ORDER BY istop DESC,create_date desc
    </select>

    <!-- 根据货号查询 -->
    <select id="queryByProductSn" parameterType="java.lang.String" resultType="com.dangjia.acg.modle.basics.Product">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product_template
        where data_status = 0
        <if test="productSn!=null and productSn!=''">
            and
            product_sn=#{productSn}
        </if>
        ORDER BY istop DESC,create_date desc
    </select>

    <!-- 根据名称模糊查询 -->
    <select id="queryByLikeName" parameterType="java.lang.String" resultType="com.dangjia.acg.modle.basics.Product">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product_template
        where data_status = 0
        <if test="name!=null and name!=''">
            and (
            name LIKE CONCAT('%',#{name},'%') or
            other_name LIKE CONCAT('%',#{name},'%')
            )
        </if>
        ORDER BY istop DESC,create_date desc
    </select>
    <!-- 查询product -->
    <select id="selectProduct" resultType="com.dangjia.acg.modle.basics.Product">
        select
        p.id,
        p.name,
        p.goods_id as goodsId,
        p.category_id as categoryId,
        p.product_sn as productSn,
        p.image,
        p.unit_id as unitId,
        p.label_id as labelId,
        p.unit_name as unitName,
        p.weight,
        p.type,
        p.maket,
        p.cost,
        p.istop,
        p.price,
        p.profit,
        p.value_name_arr as valueNameArr,
        p.value_id_arr as valueIdArr,
        p.convert_unit as convertUnit,
        p.convert_quality as convertQuality,
        p.create_date as createDate,
        p.modify_date as modifyDate
        from dj_basics_product_template p
        where
        type=1 and maket=1
        <if test="goodsId!=null and goodsId!=''">
            and p.goods_id=#{goodsId}
        </if>

        <if test="valueIdArr==null or valueIdArr==''">
            and (isnull(p.value_id_arr) or p.value_id_arr = '')
        </if>

        <if test="valueIdArr!=null or valueIdArr!=''">
            <foreach collection="valueIdArr" item="valueId" index="index">
                and FIND_IN_SET(#{valueId},p.value_id_arr)
            </foreach>
        </if>

    </select>


    <!--  按照 属性id 和属性值查找商品 -->
    <select id="getPListByValueIdArrOrAttrId" resultType="com.dangjia.acg.modle.basics.Product">
        select
        p.id as id,
        p.name as name,
        p.goods_id as goodsId,
        p.category_id as categoryId,
        p.product_sn as productSn,
        p.image as image,
        p.unit_id as unitId,
        p.label_id as labelId,
        p.unit_name as unitName,
        p.type as type,
        p.price as price,
        p.istop,
        p.value_name_arr AS valueNameArr,
        p.value_id_arr AS valueIdArr
        from dj_basics_product_template p
        where
        type=1 and maket=1 and city_id = #{cityId}
        <if test="attributeIdArr!=null and attributeIdArr!=''">
            and FIND_IN_SET(#{attributeIdArr},p.attribute_id_arr)
        </if>

        <if test="valueIdArr!=null and valueIdArr!=''">
            and FIND_IN_SET(#{valueIdArr},p.value_id_arr)
        </if>
    </select>

    <!-- 查询 无品牌无系列同属性值的商品已存在 -->
    <select id="getPListByValueIdArrByNullBrandId" resultType="com.dangjia.acg.modle.basics.Product">
        select
        p.id as id,
        p.name as name,
        p.goods_id as goodsId,
        p.category_id as categoryId,
        p.product_sn as productSn,
        p.image as image,
        p.unit_id as unitId,
        p.label_id as labelId,
        p.unit_name as unitName,
        p.type as type,
        p.istop,
        p.price as price,
        p.value_name_arr AS valueNameArr,
        p.value_id_arr AS valueIdArr
        from dj_basics_product_template p
        where
        type=1 and maket=1 and city_id = #{cityId}
        and isnull(p.brand_id)
        <if test="valueIdArr!=null and valueIdArr!=''">
            and p.value_id_arr=#{valueIdArr}
        </if>
    </select>

    <!-- 查询 无品牌无系列有属性值的商品 -->
    <select id="getPListByGoodsIdAndNullBrandId" resultType="com.dangjia.acg.modle.basics.Product">
        select
        p.id as id,
        p.name as name,
        p.goods_id as goodsId,
        p.category_id as categoryId,
        p.product_sn as productSn,
        p.image as image,
        p.unit_id as unitId,
        p.label_id as labelId,
        p.unit_name as unitName,
        p.type as type,
        p.price as price,
        p.istop,
        p.value_name_arr AS valueNameArr,
        p.value_id_arr AS valueIdArr
        from dj_basics_product_template p
        where
        type=1 and maket=1
        <if test="goodsId!=null and goodsId!=''">
            and p.goods_id=#{goodsId}
        </if>
        and isnull(p.brand_id)
        and !isnull(p.value_id_arr)
    </select>


    <!-- 查询 同品牌同系列无属性值的商品已存在 -->
    <select id="getPListByBrandSeriesIdAndNullValueId" resultType="com.dangjia.acg.modle.basics.Product">
        select
        p.id as id,
        p.name as name,
        p.goods_id as goodsId,
        p.category_id as categoryId,
        p.product_sn as productSn,
        p.image as image,
        p.unit_id as unitId,
        p.label_id as labelId,
        p.unit_name as unitName,
        p.type as type,
        p.price as price,
        p.istop,
        p.brand_id as brandId,
        p.value_id_arr AS valueIdArr
        from dj_basics_product_template p
        where
        type=1 and maket=1 and city_id = #{cityId}
        and isnull(p.attribute_id_arr)
        and (isnull(p.value_id_arr) or p.value_id_arr = '')
        <if test="brandId!=null and brandId!=''">
            and p.brand_id=#{brandId}
        </if>

    </select>


    <!-- 查询 同品牌同系列同属性值的商品已存在 -->
    <select id="getPListByBrandSeriesId" resultType="com.dangjia.acg.modle.basics.Product">
        select
        p.id as id,
        p.name as name,
        p.goods_id as goodsId,
        p.category_id as categoryId,
        p.product_sn as productSn,
        p.image as image,
        p.unit_id as unitId,
        p.label_id as labelId,
        p.unit_name as unitName,
        p.type as type,
        p.istop,
        p.price as price,
        p.value_name_arr AS valueNameArr,
        p.value_id_arr AS valueIdArr
        from dj_basics_product_template p
        where
        type=1 and maket=1 and city_id = #{cityId}
        <if test="brandId!=null and brandId!=''">
            and p.brand_id=#{brandId}
        </if>

        <if test="valueIdArr!=null and valueIdArr!=''">
            and p.value_id_arr=#{valueIdArr}
        </if>
    </select>

    <!-- 查询product -->
    <select id="queryByGoodsIdAndbrandSeriesId" resultType="com.dangjia.acg.modle.basics.Product">
        select
        p.id as id,
        p.name as name,
        p.goods_id as goodsId,
        p.category_id as categoryId,
        p.product_sn as productSn,
        p.image as image,
        p.unit_id as unitId,
        p.label_id as labelId,
        p.unit_name as unitName,
        p.type as type,
        p.istop,
        p.price as price,
        p.value_name_arr AS valueNameArr,
        p.value_id_arr AS valueIdArr
        from dj_basics_product_template p
        where
        type=1 and maket=1
        and p.goods_id=#{goodsId}

    </select>

    <!-- 查询product -->
    <select id="queryByGoodsIdAndbrandSeriesIdAndBrandId" resultType="com.dangjia.acg.modle.basics.Product">
        select
        p.id as id,
        p.name as name,
        p.goods_id as goodsId,
        p.category_id as categoryId,
        p.product_sn as productSn,
        p.image as image,
        p.unit_id as unitId,
        p.label_id as labelId,
        p.unit_name as unitName,
        p.type as type,
        p.price as price,
        p.istop,
        p.value_name_arr AS valueNameArr,
        p.value_id_arr AS valueIdArr
        from dj_basics_product_template p
        where
        type=1 and maket=1
        and p.goods_id=#{goodsId}
        <if test="brandId!=null and brandId!=''">
            and p.brand_id=#{brandId}
        </if>

    </select>

    <!--补货查询精算内商品-->
    <select id="queryRepairBudgetMaterial" resultType="com.dangjia.acg.modle.basics.Product">
        select
        p.id,
        p.NAME,
        p.goods_id AS goodsId,
        p.category_id AS categoryId,
        p.product_sn AS productSn,
        p.image,
        p.unit_id as unitId,
        p.label_id as labelId,
        p.unit_name as unitName,
        p.weight,
        p.type,
        p.maket,
        p.cost,
        p.istop,
        p.price,
        p.profit,
        p.value_name_arr AS valueNameArr,
        p.value_id_arr AS valueIdArr,
        p.convert_unit AS convertUnit,
        p.convert_quality AS convertQuality,
        p.create_date AS createDate,
        p.modify_date AS modifyDate
        from dj_actuary_budget_material abm ,dj_basics_product_template p
        WHERE abm.product_id =p.id
        and abm.delete_state!=1
        and abm.steta=1
        and abm.house_id =#{houseId}
        <if test="name!=null and name!=''">
            AND (
                abm.product_name LIKE CONCAT('%',#{name},'%')
                or
                p.other_name LIKE CONCAT('%',#{name},'%')
            )
        </if>
        <if test="categoryId!=null and categoryId!=''">
            AND
            p.category_id =#{categoryId}
        </if>
    </select>

    <!--补货查询商品库服务-->
    <select id="queryProductData" resultType="com.dangjia.acg.modle.basics.Product">
        select
        p.id,
        p.NAME,
        p.goods_id AS goodsId,
        p.category_id AS categoryId,
        p.product_sn AS productSn,
        p.image,
        p.unit_id as unitId,
        p.label_id as labelId,
        p.unit_name as unitName,
        p.weight,
        p.type,
        p.maket,
        p.istop,
        p.cost,
        p.price,
        p.profit,
        p.value_name_arr AS valueNameArr,
        p.value_id_arr AS valueIdArr,
        p.convert_unit AS convertUnit,
        p.convert_quality AS convertQuality,
        p.create_date AS createDate,
        p.modify_date AS modifyDate
        FROM
        dj_basics_product_template p
        INNER JOIN dj_basics_goods g ON p.goods_id = g.id
        INNER JOIN dj_basics_goods_category ca ON ca.id = p.category_id
        <if test="name!=null and name!=''">
            INNER JOIN dj_basics_goods_category tca ON tca.id = ca.parent_top
            left JOIN dj_basics_brand b ON b.id = p.brand_id

        </if>
        WHERE   p.data_status = 0

        <!--<if test="productId==null or productId==''">-->
            <!--AND p.type = 1-->
        <!--</if>-->

        <if test="productType!=null and productType!=''">
            AND g.type =#{productType}
        </if>
        <if test="name!=null and name!=''">
            AND (
            CONCAT(
            IFNULL(g.other_name,''),
            ca.`name`,
            IFNULL(tca.`name`,''),
            p.`name`,
            IFNULL(p.value_name_arr,''),
            IFNULL(b.`name`,''),
            IFNULL(bs.`name`,'')
            )
            LIKE CONCAT('%',#{name},'%')
            )
        </if>

        <if test="productId!=null and productId!=''">
            AND p.id in
            <foreach collection="productId" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="categoryId!=null and categoryId!=''">
            AND (ca.parent_top=#{categoryId} OR p.category_id=#{categoryId})
        </if>
        ORDER BY p.istop DESC,p.`name` DESC
    </select>

    <!-- 根据系列和属性查询切换货品-->
    <select id="getSwitchProduct" resultType="com.dangjia.acg.modle.basics.Product">
        select
        <include refid="new_columns"/>
        from dj_basics_product_template p
        where
        type=1 and maket=1

        <foreach collection="valueIdArr" item="valueId" index="index">
            and FIND_IN_SET(#{valueId},p.value_id_arr)
        </foreach>;
    </select>

    <!-- app搜索落地页 -->
    <select id="serchBoxName" resultType="com.dangjia.acg.modle.basics.Product">
        SELECT
        bp.id,
        bp.goods_id,
        bg.`name`,
        bp.image,
        bp.price,
        bg.type,
        bp.istop,
        bp.convert_unit AS convertUnit
        FROM
        dj_basics_goods bg
        INNER JOIN dj_basics_product_template bp ON bp.goods_id = bg.id


        WHERE
        bp.maket = 1
        AND bp.type = 1
        AND bg.data_status = 0
        <if test="name!=null and name!=''">
            AND CONCAT(bg.name,bp.name) LIKE CONCAT('%', #{name}, '%')
        </if>
        GROUP BY
        bp.goods_id
        ORDER BY
        bp.istop DESC,
        bg.category_id,
        bg.`name` DESC
    </select>


    <select id="selectProductByGoodsIdAndBrandIdAndBrandSeriesId"
            resultType="com.dangjia.acg.modle.basics.Product">
        SELECT
        <include refid="all_columns"/>
        FROM dj_basics_product_template
        WHERE 1 = 1
        AND goods_id = 'HP0261'
        AND brand_id = 'PP027'
    </select>

    <!--更新货品属性-->
    <update id="updateProductValueId" parameterType="java.lang.String">
        UPDATE `dj_basics_product_template` p
        SET p.value_name_arr =
          ( SELECT GROUP_CONCAT( v.NAME ) FROM dj_basics_attribute_value v WHERE FIND_IN_SET( v.id, p.value_id_arr ) )
        WHERE
        FIND_IN_SET(#{valueId}, p.value_id_arr )
    </update>


</mapper>