<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dangjia.acg.mapper.product.DjBasicsGoodsMapper">

    <sql id="all_columns">
          `id`,
          `name`,
          `category_id` AS categoryId,
          `type`,
          `buy`,
          `sales`,
          `unit_id` AS unitId,
          `create_date` AS createDate,
          `modify_date` AS modifyDate,
          `data_status` AS dataStatus,
          `other_name` AS otherName,
          `is_influe_decoration_progress` AS isInflueDecorationProgress,
          `irreversible_reasons` AS irreversibleReasons,
          `istop`,
          `brand_id` AS brandId,
          `is_elevator_fee` AS isElevatorFee,
          `indicative_price` AS indicativePrice,
          `label_ids` AS labelIds,
          is_reservation_deliver as isReservationDeliver,
          attribute_id_arr attributeIdArr
	</sql>


    <!-- 查询某个分类的商品 模糊name -->
    <select id="queryGoodsListByCategoryLikeName" resultType="com.dangjia.acg.modle.product.DjBasicsGoods">
        SELECT
        `id`,
        `name`,
        `category_id` AS categoryId,
        `type`,
        `buy`,
        `sales`,
        `unit_id` AS unitId,
        `create_date` AS createDate,
        `modify_date` AS modifyDate,
        `data_status` AS dataStatus,
        `other_name` AS otherName,
        `is_influe_decoration_progress` AS isInflueDecorationProgress,
        `irreversible_reasons` AS irreversibleReasons,
        `istop`,
        `brand_id` AS brandId,
        `is_elevator_fee` AS isElevatorFee,
        `indicative_price` AS indicativePrice,
        `label_ids` AS labelIds,
        is_reservation_deliver as isReservationDeliver,
        attribute_id_arr attributeIdArr
        FROM dj_basics_goods bg
        where 1=1
        <if test="categoryId!=null and categoryId!=''">
            and bg.category_id=#{categoryId}
        </if>
        <if test="name!=null and name!=''">
            AND (
            bg.`name` LIKE CONCAT('%',#{name}, '%' )
            OR bg.`other_name` LIKE CONCAT( '%', #{name}, '%' )
            or exists (select 1 from dj_basics_product_template t1 where bg.id=t1.goods_id and  t1.name like CONCAT('%',#{name}, '%'))
            )
        </if>
        GROUP BY bg.id
    </select>

    <select id="queryGoodsListByCategoryId" resultType="com.dangjia.acg.modle.product.DjBasicsGoods">
        SELECT
             CONCAT(b.`name`, g.`name`) AS NAME,
             g.id as id,
             g.type as type,
             g.buy as buy
        FROM
            dj_basics_goods g,
            dj_basics_brand b
        WHERE
            g.brand_id = b.id
        AND g.category_id = #{categoryId}
    </select>

    <!-- 根据id查询属性对象 -->
    <select id="queryById" resultType="com.dangjia.acg.modle.product.DjBasicsGoods">
        SELECT
        <include refid="all_columns"/>
        FROM dj_basics_goods
        where
        id =#{id}
        and data_status=0
        ORDER BY create_date desc
    </select>

    <!-- 根据商品Id查询所有货品 -->
    <select id="queryByGoodsId" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
        SELECT
        <include refid="all_columns"/>
        FROM dj_basics_product_template
        where goods_id=#{goodsId}
        and data_status=0
        ORDER BY istop DESC,create_date desc
    </select>

    <!-- 根据类别id查询商品对象 -->
    <select id="queryByCategoryId" resultType="com.dangjia.acg.modle.product.DjBasicsGoods">
        SELECT
        <include refid="all_columns"/>
        FROM dj_basics_goods
        <if test="categoryId!=null">
            where
            category_id=#{categoryId}
        </if>
        ORDER BY create_date desc
    </select>

    <select id="queryGoodsLabels" resultType="java.lang.String">
        SELECT
          label_ids
        FROM dj_basics_goods
        where id =#{goodsId}
    </select>
</mapper>