<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dangjia.acg.mapper.product.DjBasicsProductMapper">

    <sql id="new_columns">
        id as id,
        name as name,
        goods_id as goodsId,
        category_id as categoryId,
        product_sn as productSn,
        image as image,
        unit_id as unitId,
        label_id as labelId,
        unit_name as unitName,
        value_name_arr valueNameArr,
        value_id_arr AS valueIdArr,
        type as type,
        istop,
        price as price,
        other_name as otherName,
        create_date as createDate,
        modify_date as modifyDate
    </sql>

    <!-- 查询当前添加商品的属性值是否已被用(存在相关属性值的商品) -->
    <select id="getPListByValueIdArr" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
        select
        p.id as id,
        p.name as name,
        p.goods_id as goodsId,
        p.category_id as categoryId,
        p.product_sn as productSn,
        p.image as image,
        p.unit_id as unitId,
        p.label_id as labelId,
        p.unit_name as unitName,
        p.type as type,
        p.istop,
        p.price as price,
        p.other_name as otherName,
        p.value_name_arr valueNameArr,
        p.value_id_arr AS valueIdArr
        from dj_basics_product p,dj_basics_product_material p1
        where
        p.id = p1.product_id
        and p.data_status = 0
        and type=1 and maket=1
        <if test="valueIdArr!=null and valueIdArr!=''">
            and p1.value_id_arr=#{valueIdArr}
        </if>
    </select>

    <!-- 根据名称查询 -->
    <select id="queryByName" parameterType="java.lang.String" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product
        where data_status = 0
        <if test="name!=null and name!=''">
            and
            name=#{name}
        </if>
        ORDER BY istop DESC,create_date desc
    </select>

    <!-- 根据货号查询 -->
    <select id="queryByProductSn" parameterType="java.lang.String" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product
        where data_status = 0
        <if test="productSn!=null and productSn!=''">
            and
            product_sn=#{productSn}
        </if>
        ORDER BY istop DESC,create_date desc
    </select>

    <!-- 根据材料商品编号查询  营销名称-->
        <select  id ="queryProductMaterial"  parameterType="java.lang.String"    resultType="com.dangjia.acg.dto.product.AppBasicsProductDTO">
            select
            p.id,p.name,p.goods_id,p.category_id,p.product_sn,p.image,
            p.unit_name,p.unit_id,p.label_id,p.type,p.maket,p.price,p.other_name,
            p.istop,p.remark  ,m.marketing_name,b.name as attributeIdArr   from dj_basics_product  p left join  dj_basics_product_material m on  p.id=m.product_id
            left join dj_basics_attribute b on b.id=m.value_id_arr

            <if test="productSn!=null and productSn!=''">
                and
                p.product_sn=#{productSn}
            </if>
            where  1=1 and p.data_status = 0
            ORDER BY p.istop DESC,p.create_date desc
        </select>
    <!-- 根据人工商品编号查询  没有规格、没有营销名称-->
        <select  id ="queryProductWorker" parameterType="java.lang.String" resultType="com.dangjia.acg.dto.product.AppBasicsProductDTO">
            select
            p.id,p.name,p.goods_id,p.category_id,p.product_sn,p.image,
            p.unit_name,p.unit_id,p.label_id,p.type,p.maket,p.price,p.other_name,
            p.istop,p.remark,'' as marketing_name ,'' as attributeIdArr  from dj_basics_product  p left join dj_basics_product_worker w on p.id=w.product_id
            <if test="productSn!=null and productSn!=''">
             and
             p.product_sn=#{productSn}
            </if>

            where  1=1 and p.data_status = 0
            ORDER BY p.istop DESC,p.create_date desc
        </select>

    <!--  按照 属性id 和属性值查找商品 -->
    <select id="getPListByValueIdArrOrAttrId" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
        select
        p.id as id,
        p.name as name,
        p.goods_id as goodsId,
        p.category_id as categoryId,
        p.product_sn as productSn,
        p.image as image,
        p.unit_id as unitId,
        p.label_id as labelId,
        p.unit_name as unitName,
        p.type as type,
        p.price as price,
        p.istop,
        p.attribute_id_arr AS attributeIdArr,
        p.value_name_arr AS valueNameArr
        from dj_basics_product p
        INNER JOIN dj_basics_product_material pm
        on p.id=pm.product_id
        where
        p.type=1 and p.maket=1
        <if test="attributeIdArr!=null and attributeIdArr!=''">
            and FIND_IN_SET(#{attributeIdArr},pm.attribute_id_arr)
        </if>
        <if test="valueIdArr!=null and valueIdArr!=''">
            and FIND_IN_SET(#{valueIdArr},pm.value_id_arr)
        </if>
    </select>

    <!--更新货品属性-->
    <update id="updateProductValueId" parameterType="java.lang.String">
        UPDATE `dj_basics_product_material` pm
        SET pm.value_name_arr =
          ( SELECT GROUP_CONCAT( v.NAME ) FROM dj_basics_attribute_value v WHERE FIND_IN_SET( v.id, pm.value_id_arr ) )
        WHERE
        FIND_IN_SET(#{valueId}, pm.value_id_arr )
    </update>

    <!-- 根据商品Id查询所有货品 -->
    <select id="queryByGoodsId" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product
        where 1=1 and goods_id=#{goodsId}
        and data_status = 0
        ORDER BY istop DESC,create_date desc
    </select>

    <!-- 根据商品Id查询所有货品 -->
    <select id="queryByGoodsIdLimit12" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product
        where 1=1 and goods_id=#{goodsId}
        and data_status = 0
        ORDER BY  RAND() LIMIT 12
    </select>

    <!-- 根据货品ID查询暂存的商品 -->
    <select id="queryTemporaryStorage" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product
        where goods_id=#{goodsId}
        and  data_status=#{dataStatus}
        and data_status=0
        ORDER BY istop DESC,create_date desc
        limit 1
    </select>

    <update id="updateProductCategoryByGoodsId">
        update dj_basics_product set category_id=#{categoryId} where goods_id=#{goodsId}
    </update>
    <!-- 删除材料商品扩展表信息-->
    <delete id="deleteProductMaterial" parameterType="java.lang.String">
       delete from dj_basics_product_material  where product_id in(select id from dj_basics_product where goods_id=#{goodsId})
    </delete>
    <!-- 删除人工商品扩展表信息-->
    <delete id="deleteProductWorker">
       delete from dj_basics_product_worker  where product_id in(select id from dj_basics_product where goods_id=#{goodsId})
    </delete>

    <!-- 查询所有的商品信息 -->
    <select id="queryProductByCategoryId" parameterType="java.lang.String" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product
        where data_status = 0
        <if test="categoryId!=null and categoryId!=''">
           and category_id=#{categoryId}
        </if>
        ORDER BY istop DESC,create_date desc
    </select>

    <!-- 根据货品id查询货品对象 -->
    <select id="getById" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product
        where id=#{id}
        and data_status=0
        ORDER BY istop DESC,create_date desc
    </select>


    <select id="serchCategoryProduct" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
        SELECT
        bp.id,
        bp.goods_id,
        bp.`name`,
        bp.image,
        bp.price,
        bg.type,
        bp.istop,
        IFNULL(m.convert_unit,bp.unit_id) AS unitId
        FROM
        dj_basics_goods bg
        INNER JOIN dj_basics_product bp ON bp.goods_id = bg.id
        <if test="(brandVal!=null and brandVal!='') or (attributeVal!=null and attributeVal!='')">
            INNER JOIN dj_basics_product_material m ON m.product_id = bp.id
        </if>
        <if test="(brandVal==null and brandVal=='') and (attributeVal==null and attributeVal=='')">
            LEFT JOIN dj_basics_product_material m ON m.product_id = bp.id
        </if>
        LEFT JOIN dj_basics_product_worker w ON w.product_id = bp.id
        WHERE
        bp.maket = 1
        AND bp.type = 1
        AND bg.data_status = 0
        <if test="name!=null and name!=''">
            AND CONCAT(bg.name,bp.name) LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="categoryId!=null and categoryId!=''">
            AND bg.category_id = #{categoryId}
        </if>
        <if test="null!=attributeVal and attributeVal.size>0">
            AND
            <foreach collection="attributeVal" index="index" item="item" open="(" separator="OR" close=")">
                FIND_IN_SET( #{item},bp.value_id_arr)
            </foreach>
        </if>
        <if test="brandVal!=null and brandVal!=''">
            AND  FIND_IN_SET(bg.brand_id,#{brandVal})
        </if>
        <if test="orderKey!=null and orderKey!='' and orderKey==0 ">
            ORDER BY bp.price
        </if>
        <if test="orderKey!=null and orderKey!='' and orderKey==1 ">
            ORDER BY bp.price DESC
        </if>
        <if test="orderKey==null or orderKey==''">
            ORDER BY
            bp.istop DESC,
            bg.category_id,
            bg.`name` DESC
        </if>

    </select>

    <select id="queryProductByTechnologyIds" parameterType="java.lang.String" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
        SELECT
        <include refid="new_columns"/>
        FROM dj_basics_product t
        where t.data_status = 0
        AND t.maket = 1
        AND EXISTS (
        SELECT
        1
        FROM
        dj_basics_product_worker t1
        WHERE
        t.id = t1.product_id
        AND FIND_IN_SET(#{technologyId}, t1.technology_ids)
        )
        ORDER BY istop DESC,create_date desc
    </select>


    <!--补货查询商品库服务-->
    <select id="queryProductData" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
    select
        p.id as id,
        p.name as name,
        p.goods_id as goodsId,
        p.category_id as categoryId,
        p.product_sn as productSn,
        p.image as image,
        p.unit_id as unitId,
        p.label_id as labelId,
        p.unit_name as unitName,
        p.type as type,
        p.price as price,
        p.istop,
        p.value_id_arr AS valueIdArr,
        p.value_name_arr AS valueNameArr
    FROM
    dj_basics_product p
    INNER JOIN dj_basics_goods g ON p.goods_id = g.id
    INNER JOIN dj_basics_goods_category ca ON ca.id = p.category_id
    <if test="name!=null and name!=''">
        INNER JOIN dj_basics_goods_category tca ON tca.id = ca.parent_top
    </if>
    WHERE   p.data_status = 0

    <!--<if test="productId==null or productId==''">-->
    <!--AND p.type = 1-->
    <!--</if>-->

    <if test="productType!=null and productType!=''">
        AND g.type =#{productType}
    </if>
    <if test="name!=null and name!=''">
        AND (
        CONCAT(
        IFNULL(g.other_name,''),
        ca.`name`,
        IFNULL(tca.`name`,''),
        p.`name`,
        IFNULL(p.value_name_arr,'')
        )
        LIKE CONCAT('%',#{name},'%')
        )
    </if>

        <if test="productId!=null and productId!=''">
            AND p.id in
            <foreach collection="productId" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="categoryId!=null and categoryId!=''">
            AND (ca.parent_top=#{categoryId} OR p.category_id=#{categoryId})
        </if>
        ORDER BY p.istop DESC,p.`name` DESC
    </select>


    <select id="queryChooseGoods" resultType="com.dangjia.acg.modle.product.DjBasicsProduct">
        SELECT
            p.*
        FROM
            dj_basics_goods_category gc
        INNER JOIN dj_basics_goods g ON gc.id = g.category_id
        INNER JOIN dj_basics_product p ON g.id = p.goods_id
        WHERE
            (
                gc. NAME = "设计师"
                OR gc. NAME = "精算师"
            )
    </select>
</mapper>