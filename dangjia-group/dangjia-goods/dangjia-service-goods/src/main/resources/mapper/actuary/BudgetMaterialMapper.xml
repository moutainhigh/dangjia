<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dangjia.acg.mapper.actuary.IBudgetMaterialMapper">
	<sql id="all_columns">
		id,
		house_flow_id as houseFlowId,
		house_id as houseId,
		worker_type_id as workerTypeId,
		steta,
		template_id as templateId,
		convert_count as convertCount,
		delete_state as deleteState,
		product_id as productId,
		product_sn as productSn,
		product_name as productName,
		product_nick_name as productNickName,
		goods_id as goodsId,
		goods_name as goodsName,
		price,
		cost,
		description,
		shop_count as shopCount,
		unit_name as unitName,
		total_price as totalPrice,
		group_type as groupType,
		product_type as productType,
		goods_group_id as goodsGroupId,
		category_id as categoryId,
		image,
		create_date as createDate,
		modify_date as modifyDate
	</sql>

	<!--精算阶段花费统计-->
	<select id="getHouseBudgetStageCost" resultType="com.dangjia.acg.dto.actuary.BudgetStageCostDTO">
		(
			SELECT
				house_id houseId,
				worker_type_id workerTypeId,
				'0' type,
				SUM(total_price) totalAmount
			FROM
				`dj_actuary_budget_material`
			WHERE
				delete_state != 1
			<if test = "workerTypeId!=null and workerTypeId!=''">
				AND `worker_type_id` = #{workerTypeId}
			</if>
			AND `worker_type_id` = #{workerTypeId}
			AND `house_id` = #{houseId}
			GROUP BY
				houseId,
				workerTypeId
		)
		UNION ALL
			(
				SELECT
					house_id houseId,
					worker_type_id workerTypeId,
					'2' type,
					SUM(total_price) totalAmount
				FROM
					`dj_actuary_budget_worker`
				WHERE
					delete_state != 1
				<if test = "workerTypeId!=null and workerTypeId!=''">
					AND `worker_type_id` = #{workerTypeId}
				</if>
				AND `house_id` = #{houseId}
				GROUP BY
					houseId,
					workerTypeId
			);
	</select>
	<!--精算分类(支付和未支付)-->
	<select id="getCategoryAllList" resultType="com.dangjia.acg.modle.actuary.BudgetMaterial">
		SELECT
		<include refid="all_columns"/>
		FROM dj_actuary_budget_material
		WHERE
			house_id=#{houseId}
		<if test = "categoryId!=null and categoryId!=''">
			and category_id = #{categoryId}
		</if>
		and delete_state in (0,3,4)
	</select>
	<!--精算分类材料总价(支付和未支付)-->
	<select id="getCategoryAllPrice" resultType="java.lang.Double">
	    select
		    IFNULL(sum(p.price * bm.convert_count),0)
		from dj_basics_product p,dj_actuary_budget_material bm
		where
	        p.id = bm.product_id
	    and bm.house_id = #{houseId}
	    and bm.category_id =#{categoryId}
	    and bm.delete_state in (0,3,4)
	</select>
	<!--房子材料服务总价-->
	<select id="getHouseCaiPrice" resultType="java.lang.Double">
		select
		    IFNULL(sum(p.price * bm.convert_count),0)
		from dj_basics_product p,dj_actuary_budget_material bm
		where
	        p.id = bm.product_id
	    and bm.house_id = #{houseId}
	    and bm.delete_state in (0,3,4)
	</select>
	<!--查询精算分类-->
	<select id="categoryIdList" resultType="java.lang.String">
		select DISTINCT bm.category_id
		from dj_actuary_budget_material bm
 		where bm.house_id = #{houseId}
 		and bm.delete_state in (0,3,4)
 		and bm.category_id !=''
 		and bm.category_id is not null;
	</select>

	<!-- 模糊查询 -->
	<select id="repairBudgetMaterial" resultType="com.dangjia.acg.modle.actuary.BudgetMaterial">
		SELECT
		    <include refid="all_columns"/>
		FROM dj_actuary_budget_material
		where
		 steta in (1,2)
		and delete_state != 1
		and house_id = #{houseId}
		<if test = "productName!=null and productName!=''">
			and
			product_name LIKE CONCAT('%',#{productName},'%')
		</if>
		<if test = "productType!=null and productType!=''">
			and
			product_type = #{productType}
		</if>
		<if test = "workerTypeId!=null and workerTypeId!=''">
			and
			worker_type_id = #{workerTypeId}
		</if>
		<if test = "categoryId!=null and categoryId!=''">
			and
			category_id = #{categoryId}
		</if>
		GROUP BY product_sn
		ORDER BY create_date,house_id,product_sn desc
	</select>


	<!--未付款工种服务总价-->
	<select id="nonPaymentSer" resultType="java.lang.Double">
		select
		    IFNULL(sum(p.price * bm.convert_count),0)
		from dj_basics_product p,dj_actuary_budget_material bm
		where
	        p.id = bm.product_id
	    and bm.house_id = #{houseId}
	    and bm.worker_type_id = #{workerTypeId}
	    and bm.delete_state in (0,2)
	    and bm.steta = 1
	    and bm.product_type = 1
	</select>

	<!--支付时工种服务总价-->
	<select id="getBudgetSerPrice" resultType="java.lang.Double">
		select
		    IFNULL(sum(p.price * bm.convert_count),0)
		from dj_basics_product p,dj_actuary_budget_material bm
		where
	        p.id = bm.product_id
	    and bm.house_id = #{houseId}
	    and bm.worker_type_id = #{workerTypeId}
	    and bm.delete_state = 0
	    and bm.steta = 1
	    and bm.product_type = 1
	</select>
	<!--支付时未选择服务总价-->
	<select id="getNotSerPrice" resultType="java.lang.Double">
		select
		    IFNULL(sum(p.price * bm.convert_count),0)
		from dj_basics_product p,dj_actuary_budget_material bm
		where
	        p.id = bm.product_id
	    and bm.house_id = #{houseId}
	    and bm.worker_type_id = #{workerTypeId}
	    and bm.delete_state = 2
	    and bm.steta = 1
	    and bm.product_type = 1
	</select>


	<!--未付款材料总价-->
	<select id="nonPaymentCai" resultType="java.lang.Double">
		select
		    IFNULL(sum(p.price * bm.convert_count),0)
		from dj_basics_product p,dj_actuary_budget_material bm
		where
	        p.id = bm.product_id
	    and bm.house_id = #{houseId}
	    and bm.worker_type_id = #{workerTypeId}
	    and bm.delete_state in (0, 2)
	    and bm.steta = 1
	    and bm.product_type = 0
	</select>

	<!--支付时工种材料总价-->
	<select id="getBudgetCaiPrice" resultType="java.lang.Double">
		select
		    IFNULL(sum(p.price * bm.convert_count),0)
		from dj_basics_product p,dj_actuary_budget_material bm
		where
	        p.id = bm.product_id
	    and bm.house_id = #{houseId}
	    and bm.worker_type_id = #{workerTypeId}
	    and bm.delete_state = 0
	    and bm.steta = 1
	    and bm.product_type = 0
	</select>

	<!--支付时未选择工种材料总价-->
	<select id="getNotCaiPrice" resultType="java.lang.Double">
		select
		    IFNULL(sum(p.price * bm.convert_count),0)
		from dj_basics_product p,dj_actuary_budget_material bm
		where
	        p.id = bm.product_id
	    and bm.house_id = #{houseId}
	    and bm.worker_type_id = #{workerTypeId}
	    and bm.delete_state = 2
	    and bm.steta = 1
	    and bm.product_type = 0
	</select>

	<select id="getBudgetCaiList" resultType="com.dangjia.acg.modle.actuary.BudgetMaterial">
		SELECT
		<include refid="all_columns"/>
		FROM dj_actuary_budget_material
		WHERE
		   house_id=#{houseId}
		   and worker_type_id =#{workerTypeId}
		   and product_type = 0
		   and delete_state in (0,2);
	</select>

	<select id="getBudgetCaiListByGoodsId" resultType="com.dangjia.acg.modle.actuary.BudgetMaterial">
		SELECT
		<include refid="all_columns"/>
		FROM dj_actuary_budget_material
		WHERE
		house_id=#{houseId}
		and worker_type_id =#{workerTypeId}
		and goods_id =#{goodsId}
		and product_type = 0
		and delete_state in (0,2);
	</select>


	<select id="getBudgetSerList" resultType="com.dangjia.acg.modle.actuary.BudgetMaterial">
		SELECT
		<include refid="all_columns"/>
		FROM dj_actuary_budget_material
		WHERE
		   house_id=#{houseId}
		   and worker_type_id =#{workerTypeId}
		   and product_type = 1
		   and delete_state in (0,2);
	</select>

	<!-- 查询所有 -->
	<select id="getBudgetMaterial" resultType="java.util.Map">
		SELECT
		    <include refid="all_columns"/>
		FROM dj_actuary_budget_material ORDER BY create_date desc
	</select>

	<!-- 根据houseId和workerTypeId查询房子材料精算 -->
	<select id="getBudgetMaterialById" resultType="java.util.Map">
		SELECT
		<include refid="all_columns"/>
		FROM dj_actuary_budget_material
		where house_id=#{houseId}
		and worker_type_id =#{workerTypeId}
		ORDER BY category_id,create_date DESC
	</select>

	<!-- 根据houseId和workerTypeId查询房子材料精算 -->
	<select id="getBudgetMaterialByHouseIdAndWorkerTypeId" resultType="com.dangjia.acg.modle.actuary.BudgetMaterial">
		SELECT
		<include refid="all_columns"/>
		FROM dj_actuary_budget_material
		where house_id=#{houseId}
		and worker_type_id =#{workerTypeId}
		ORDER BY create_date desc
	</select>

	<!-- 根据template_id查询所有 -->
	<select id="getAllbudgetTemplates" resultType="java.util.Map">
		SELECT
		<include refid="all_columns"/>
		FROM dj_actuary_budget_material WHERE template_id=#{template_id} and steta=3 ORDER BY create_date desc
	</select>

	<!-- 删除对象 -->
	<delete id="deleteById" parameterType="java.lang.String">
		DELETE FROM dj_actuary_budget_material 
		WHERE id=#{id}
	</delete>

	<!-- 根据风格删除对象 -->
	<delete id="deleteBytemplateId" parameterType="java.lang.String">
		DELETE FROM dj_actuary_budget_material 
		WHERE template_id=#{template_id}
	</delete>

	<!-- 根据houseId和工种id删除人工精算 -->
	<delete id="deleteByhouseId" parameterType="java.lang.String">
		DELETE FROM dj_actuary_budget_material
		WHERE house_id=#{houseId}
		and worker_type_id =#{workerTypeId}
	</delete>

	<!--根据houseFlow查询已支付后精算价格-->
	<select id="getAbmPayOutByHfId" resultType="java.lang.Double">
		select sum(abm.price * abm.shop_count)
		from dj_actuary_budget_material abm
		WHERE abm.delete_state!=1
		and abm.steta=1
        and abm.house_flow_id=#{houseFlowId}
	</select>

	<!--根据houseFlow查询未支付实时精算价格-->
	<select id="getAbmCasualByHfId" resultType="java.lang.Double">
		select sum(p.price * abm.shop_count)
		from dj_basics_product p,dj_actuary_budget_material abm
		WHERE  p.id = abm.product_id
		and abm.delete_state!=1
		and abm.steta=1
        and abm.house_flow_id=#{houseFlowId}
	</select>


	<insert id="insertByBatch" parameterType="java.util.List">
		INSERT INTO dj_actuary_budget_material (
		id,
		house_flow_id,
		house_id,
		worker_type_id,
		steta,
		template_id,
		delete_state,
		product_id,
		product_sn,
		goods_id,
		goods_name,
		product_name,
		price,
		cost,
		description,
		shop_count,
		convert_count,
		unit_name,
		total_price,
		create_date,
		modify_date,
		group_type,
		product_type,
		actuarial_quantity,
		data_status,
		product_nick_name,
		goods_group_id,
		category_id,
		image
		)
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.id},
			#{item.houseFlowId},
			#{item.houseId},
			#{item.workerTypeId},
			#{item.steta},
			#{item.templateId},
			#{item.deleteState},
			#{item.productId},
			#{item.productSn},
			#{item.goodsId},
			#{item.goodsName},
			#{item.productName},
			#{item.price},
			#{item.cost},
			#{item.description},
			#{item.shopCount},
			#{item.convertCount},
			#{item.unitName},
			#{item.totalPrice},
			#{item.createDate},
			#{item.modifyDate},
			#{item.groupType},
			#{item.productType},
			#{item.actuarialQuantity},
			#{item.dataStatus},
			#{item.productNickName},
			#{item.goodsGroupId},
			#{item.categoryId},
			#{item.image}
			)
		</foreach>
	</insert>

	<!--更新货品名称-->
	<update id="updateBudgetMaterialById" parameterType="java.lang.String">
		UPDATE dj_actuary_budget_material p1
		INNER JOIN `dj_basics_product` p ON p.id = p1.product_id
		SET p1.product_name = p.`name`,p1.image=p.image
		WHERE 1=1
		<if test="null!=brandSeriesId and ''!=brandSeriesId">
			or p.brand_series_id = #{brandSeriesId};
		</if>
		<if test="null!=brandId and ''!=brandId">
			or p.brand_id=#{brandId}
		</if>
		<if test="null!=goodsId and ''!=goodsId">
			or p.goods_id=#{goodsId}
		</if>
		<if test="null!=id and ''!=id">
			or p.id=#{id}
		</if>
	</update>

	<!--更新单位-->
	<update id="updateBudgetMaterialByUnitName" parameterType="java.lang.String">
		UPDATE dj_actuary_budget_material
		SET unit_name=#{unitName}
		where product_id in
		<foreach collection="products" index="index" item="item"
				 separator="," open="(" close=")">
		#{item.id}
		</foreach>
	</update>

</mapper>
