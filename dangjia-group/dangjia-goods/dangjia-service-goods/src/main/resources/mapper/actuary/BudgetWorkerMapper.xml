<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dangjia.acg.mapper.actuary.IBudgetWorkerMapper">

	<sql id="all_columns">
	   	id,
		house_flow_id as houseFlowId,
		house_id as houseId,
		worker_type_id as workerTypeId,
		steta,
		template_id as templateId,
		delete_state as deleteState,
		worker_goods_id as workerGoodsId,
		worker_goods_sn as workerGoodsSn,
		name,
		image,
		price,
		description,
		shop_count as shopCount,
		repair_count as repairCount,
		back_count as backCount,
		unit_name as unitName,
		total_price as totalPrice,
		data_status as dataStatus,
		create_date as createDate,
		modify_date as modifyDate
	</sql>

	<!--精算工种人工(支付和未支付)-->
	<select id="getTypeAllList" resultType="com.dangjia.acg.modle.actuary.BudgetWorker">
		SELECT
		<include refid="all_columns"/>
		FROM dj_actuary_budget_worker
		WHERE
		house_id=#{houseId}
		<if test = "workerTypeId!=null and workerTypeId!=''">
			and worker_type_id =#{workerTypeId}
		</if>
		<if test = "deleteState!=null and deleteState!=''">
			and delete_state = #{deleteState}
		</if>
		<if test = "deleteState==null or deleteState==''">
			and delete_state in (0,3);
		</if>

	</select>

	<!--精算工种人工总价(支付和未支付)-->
	<select id="getTypeAllPrice" resultType="java.lang.Double">
		SELECT
			IFNULL(sum(wg.price * bw.shop_count),0) workerPrice
		FROM
			dj_basics_worker_goods wg
		INNER JOIN dj_actuary_budget_worker bw ON wg.id = bw.worker_goods_id
		WHERE  bw.house_id = #{houseId}
		<if test = "deleteState!=null and deleteState!=''">
			and bw.delete_state = #{deleteState}
		</if>
		<if test = "deleteState==null or deleteState==''">
			and bw.delete_state in (0,3);
		</if>
	    and bw.worker_type_id = #{workerTypeId}
	</select>

	<!--房子人工总价-->
	<select id="getHouseWorkerPrice" resultType="java.lang.Double">
		SELECT
			IFNULL(sum(wg.price * bw.shop_count),0) workerPrice
		FROM
			dj_basics_worker_goods wg
		INNER JOIN dj_actuary_budget_worker bw ON wg.id = bw.worker_goods_id
		WHERE  bw.house_id = #{houseId}
		<if test = "deleteState!=null and deleteState!=''">
			and bw.delete_state = #{deleteState}
		</if>
		<if test = "deleteState==null or deleteState==''">
			and bw.delete_state in (0,3);
		</if>
	</select>

	<!--查询精算工种-->
	<select id="workerTypeList" resultType="java.lang.String">
		select DISTINCT bw.worker_type_id
		from dj_actuary_budget_worker bw
 		where bw.house_id = #{houseId}
 		and bw.delete_state in (0,3)
 		order by bw.worker_type_id
	</select>

	<select id="byWorkerGoodsId" resultType="com.dangjia.acg.modle.actuary.BudgetWorker" >
		SELECT
		    <include refid="all_columns"/>
		FROM dj_actuary_budget_worker
		WHERE
			worker_goods_id=#{workerGoodsId}
		and
			house_id=#{houseId}
	</select>

	<!--根据houseFlowId-->
	<select id="getByHouseFlowId" resultType="com.dangjia.acg.modle.actuary.BudgetWorker">
		SELECT
		<include refid="all_columns"/>
		FROM dj_actuary_budget_worker
		WHERE
		    house_id=#{houseId}
		and house_flow_id = #{houseFlowId}
		and delete_state = 3;
	</select>

	<!--支付时工种人工总价-->
	<select id="getBudgetWorkerPrice" resultType="java.lang.Double">
		SELECT
			IFNULL(sum(wg.price * bw.shop_count),0) workerPrice
		FROM
			dj_basics_worker_goods wg
		INNER JOIN dj_actuary_budget_worker bw ON wg.id = bw.worker_goods_id
		WHERE  bw.house_id = #{houseId}
	    and bw.delete_state = 0
	    and bw.worker_type_id = #{workerTypeId}
	</select>

	<select id="getBudgetWorkerList" resultType="com.dangjia.acg.modle.actuary.BudgetWorker">
		SELECT
		<include refid="all_columns"/>
		FROM dj_actuary_budget_worker
		WHERE
		   house_id=#{houseId}
		   and worker_type_id =#{workerTypeId}
		   and delete_state=0;
	</select>

	<!-- 查询所有 -->
	<select id="getBudgetWorker" resultType="java.util.Map">
		SELECT
		     <include refid="all_columns"/>
		FROM dj_actuary_budget_worker ORDER BY create_date desc
	</select>

	<!-- 根据houseId和wokerTypeId查询房子人工精算 -->
	<select id="getBudgetWorkerById" resultType="java.util.Map">
		SELECT
		    <include refid="all_columns"/>
		FROM dj_actuary_budget_worker
		WHERE house_id=#{houseId}
		and worker_type_id =#{workerTypeId}
		ORDER BY create_date desc
	</select>

	<!-- 根据houseId和wokerTypeId查询房子人工精算 -->
	<select id="getBudgetWorkerByHouseIdAndWorkerTypeId" resultType="com.dangjia.acg.modle.actuary.BudgetWorker">
		SELECT
		<include refid="all_columns"/>
		FROM dj_actuary_budget_worker
		WHERE house_id=#{houseId}
		and worker_type_id =#{workerTypeId}
		ORDER BY create_date desc
	</select>

	<!-- 根据template_id查询所有 -->
	<select id="getAllbudgetTemplates" resultType="java.util.Map">
		SELECT
		    <include refid="all_columns"/>
		FROM dj_actuary_budget_worker WHERE template_id=#{template_id} and steta=3  ORDER BY create_date desc
	</select>

	<!-- 删除对象 -->
	<delete id="deleteById" parameterType="java.lang.String">
		DELETE FROM dj_actuary_budget_worker 
		WHERE id=#{id}
	</delete>

	<!-- 删除对象 -->
	<delete id="deleteBytemplateId" parameterType="java.lang.String">
		DELETE FROM dj_actuary_budget_worker 
		WHERE template_id=#{template_id}
	</delete>

	<!-- 根据houseId和工种id删除人工精算 -->
	<delete id="deleteByhouseId" parameterType="java.lang.String">
		DELETE FROM dj_actuary_budget_worker
		WHERE house_id=#{houseId}
		and worker_type_id =#{workerTypeId}
	</delete>

	<!-- 根据房子id和工序id查询人工精算总价 -->
	<select id="getWorkerTotalPrice" resultType="java.util.Map">
		SELECT
			 IFNULL(sum(wg.price * abw.shop_count),0) AS totalPrice
		FROM
			dj_basics_worker_goods wg,
			dj_actuary_budget_worker abw
		WHERE
			wg.id = abw.worker_goods_id
		AND abw.house_id = #{houseId}
		AND abw.delete_state != 1
		AND abw.worker_type_id = #{workerTypeId}
    </select>

	<insert id="insertByBatch" parameterType="java.util.List">
		INSERT INTO dj_actuary_budget_worker (
		id,
		house_flow_id,
		house_id,
		worker_type_id,
		steta,
		template_id,
		delete_state,
		worker_goods_id,
		worker_goods_sn,
		image,
		name,
		price,
		description,
		shop_count,
		repair_count,
		back_count,
		unit_name,
		total_price,
		create_date,
		modify_date,
		data_status
		)
		VALUES

		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.id},
			#{item.houseFlowId},
			#{item.houseId},
			#{item.workerTypeId},
			#{item.steta},
			#{item.templateId},
			#{item.deleteState},
			#{item.workerGoodsId},
			#{item.workerGoodsSn},
			#{item.image},
			#{item.name},
			#{item.price},
			#{item.description},
			#{item.shopCount},
			#{item.repairCount},
			#{item.backCount},
			#{item.unitName},
			#{item.totalPrice},
			#{item.createDate},
			#{item.modifyDate},
			#{item.dataStatus}
			)
		</foreach>
	</insert>
</mapper>
