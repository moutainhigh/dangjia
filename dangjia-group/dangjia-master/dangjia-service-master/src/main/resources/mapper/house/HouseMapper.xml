<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dangjia.acg.mapper.house.IHouseMapper">
    <sql id="basic_columns">
        id,
        building,
        city_name as cityName,
        residential,
        type,
        unit,
        member_id as memberId,
        task_number as taskNumber,
        square,
        number,
        style,
        designer_ok as designerOk,
        budget_ok as budgetOk,
        image,
        decoration_type as decorationType,
        city_id as cityId,
        modeling_layout_id as modelingLayoutId,
        money,
        pause,
        show_house as showHouse,
        village_id as villageId,
        refer_house_id as referHouseId,
        have_complete as haveComplete,
        record_type as recordType,
        build_square as buildSquare,
        again,
        house_type as houseType,
        drawings,
        work_deposit_id as workDepositId,
        custom_sort as customSort,
        is_select as isSelect,
        visit_state as visitState,
        data_status as dataStatus,
        create_date as createDate,
        construction_date as constructionDate,
        modify_date as modifyDate
    </sql>
    <sql id="basic_h_columns">
        h.id,
        h.building,
        h.city_name as cityName,
        h.residential,
        h.type,
        h.unit,
        h.member_id as memberId,
        h.task_number as taskNumber,
        h.square,
        h.number,
        h.style,
        h.designer_ok as designerOk,
        h.budget_ok as budgetOk,
        h.image,
        h.decoration_type as decorationType,
        h.city_id as cityId,
        h.modeling_layout_id as modelingLayoutId,
        h.money,
        h.pause,
        h.show_house as showHouse,
        h.village_id as villageId,
        h.refer_house_id as referHouseId,
        h.have_complete as haveComplete,
        h.record_type as recordType,
        h.build_square as buildSquare,
        h.again,
        h.house_type as houseType,
        h.drawings,
        h.work_deposit_id as workDepositId,
        h.custom_sort as customSort,
        h.is_select as isSelect,
        h.visit_state as visitState,
        h.data_status as dataStatus,
        h.create_date as createDate,
        h.construction_date as constructionDate,
        h.modify_date as modifyDate
    </sql>
    <select id="getDesignList" resultType="com.dangjia.acg.dto.house.DesignDTO">
        SELECT
        house.id AS houseId,
        house.designer_ok AS designerOk,
        house.residential AS residential,
        house.building AS building,
        house.unit AS unit,
        house.decoration_type AS decorationType,
        house.number AS number,
        member.nick_name AS nickName,
        member.NAME AS NAME,
        member.mobile AS mobile
        FROM
        dj_house house
        INNER JOIN dj_member member ON member.id = house.member_id
        WHERE 1=1
        <if test="dataStatus!=null and dataStatus!=''">
            AND house.data_status=#{dataStatus}
        </if>
        <if test="dataStatus == 1">
            AND house.visit_state=1
        </if>
        <if test="designerType == 0">
            AND house.designer_ok =4
        </if>
        <if test="designerType == 1">
            AND house.visit_state=1
            AND house.decoration_type !=2
            AND house.designer_ok =1
        </if>
        <if test="designerType == 2">
            AND house.visit_state=1
            AND ((house.decoration_type !=2
            AND house.designer_ok in (9,5,6))
            or (house.decoration_type =2
            AND house.designer_ok in (1,5,6)))
        </if>
        <if test="designerType == 3">
            AND house.visit_state=1
            AND house.designer_ok in (2,7,8)
        </if>
        <if test="designerType == 4">
            AND house.designer_ok =3
        </if>
        <if test="searchKey!=null and searchKey!=''">
            AND (CONCAT(
            house.residential,
            IFNULL(house.building, '*'),
            '栋',
            IFNULL(CONCAT(house.unit, '单元'),'' ),
            IFNULL(house.number, '*'),
            '号'
            ) like CONCAT('%',#{searchKey},'%')
            OR member.mobile like CONCAT('%',#{searchKey},'%')
            )
        </if>
        ORDER BY house.create_date DESC
    </select>

    <select id="startWorkPage" resultType="com.dangjia.acg.dto.house.HouseDTO">
        SELECT id                 as houseId,
               city_id            as cityId,
               city_name          as cityName,
               village_id         as villageId,
               residential,
               modeling_layout_id as modelingLayoutId,
               building,
               unit,
               number,
               square,
               work_deposit_id    as workDepositId,
               refer_house_id     as referHouseId,
               style,
               house_type         as houseType,
               drawings,
               decoration_type    as decorationType
        FROM dj_house
        WHERE data_status = 0
          AND id = #{houseId}
    </select>

    <!--查询所有的房子 指定房子 装修状态-->
    <select id="getAllHouseByVisitState" resultType="com.dangjia.acg.modle.house.House">
        SELECT
        <include refid="basic_columns"/>
        FROM dj_house
        WHERE
        data_status=0
        AND visit_state=#{visitState}
    </select>


    <!--查询所有的房子 指定房子 装修状态-->
    <select id="getByLikeAddress" resultType="com.dangjia.acg.modle.house.House">
        SELECT
        house.id,
        house.member_id as memberId,
        house.residential,
        house.building,
        house.unit,
        house.number,
        house.data_status as dataStatus,
        house.create_date as createDate,
        house.construction_date as constructionDate,
        house.modify_date as modifyDate,
        (SELECT COUNT(*) from dj_deliver_order_split where apply_status = 1 and house_id = house.id) as waitCount,
        (SELECT COUNT(*) from dj_deliver_order_split where apply_status = 2 and house_id = house.id) as sendCount
        FROM dj_house as house
        WHERE 1=1
        <if test="likeAddress!=null and likeAddress!=''">
            AND CONCAT(
            house.residential,
            IFNULL(house.building, '*'),
            '栋',
            IFNULL(CONCAT(house.unit, '单元'),'' ),
            IFNULL(house.number, '*'),
            '号'
            ) LIKE
            CONCAT('%',#{likeAddress},'%')

        </if>
        ORDER BY waitCount DESC,sendCount DESC,house.create_date DESC
    </select>

    <select id="getStatisticsByDate" resultType="com.dangjia.acg.modle.house.House">
        SELECT id, budget_ok as budgetOk
        FROM dj_house
        WHERE designer_ok = 3
          AND data_status = 0
          AND modify_date BETWEEN #{start} AND #{end}
        ORDER BY create_date ASC
    </select>
    <!--根据城市、小区，最大最小面积搜索-->
    <select id="getSameLayout" resultType="com.dangjia.acg.modle.house.House">
        SELECT
        <include refid="basic_columns"/>
        from dj_house h
        INNER JOIN (SELECT a.house_id,COUNT(a.id) num FROM dj_core_house_flow_apply a GROUP BY a.house_id ) b ON
        b.house_id=h.id
        where
        data_status=0
        <if test="cityId!=null and cityId!=''">
            and city_id = #{cityId}
        </if>
        <if test="villageId!=null and villageId!=''">
            and village_id = #{villageId}
        </if>
        <if test="minSquare!=null and minSquare!=''">
            and build_square &gt;= #{minSquare}
        </if>
        <if test="maxSquare!=null and maxSquare!=''">
            and build_square &lt;= #{maxSquare}
        </if>
        <if test="houseType!=null and houseType!=''">
            and house_type = #{houseType}
        </if>
        and ((decoration_type in (1,2) and budget_ok=3) or (decoration_type=3 and visit_state=1))
        and site_display=0
        order by num desc
    </select>
    <select id="getSameLayoutDistance" resultType="com.dangjia.acg.modle.house.House">
        SELECT
        <include refid="basic_h_columns"/>
        from dj_house h
        INNER JOIN (SELECT a.house_id,COUNT(a.id) num FROM dj_core_house_flow_apply a GROUP BY a.house_id ) b ON
        b.house_id=h.id
        INNER JOIN (
            SELECT
                mv.*, (
                st_distance (
                point (mv.locationx, mv.locationy),
                point (#{locationx}	,#{locationy}
                ) * 111195 / 1000
                ) AS juli
            FROM
            `dj_house_modeling_village` mv
            WHERE
            mv.locationx IS NOT NULL
        ) v ON v.id = h.village_id
        where
        h.data_status=0
        <if test="cityId!=null and cityId!=''">
            and h.city_id = #{cityId}
        </if>

        <if test="minSquare!=null and minSquare!=''">
            and h.build_square &gt;= #{minSquare}
        </if>
        <if test="maxSquare!=null and maxSquare!=''">
            and h.build_square &lt;= #{maxSquare}
        </if>
        and ((h.decoration_type in (1,2) and h.budget_ok=3) or (h.decoration_type=3 and h.visit_state=1))
        and h.site_display=0
        ORDER BY
        v.juli ASC
    </select>
    <!--参考报价-->
    <select id="getReferenceBudget" resultType="com.dangjia.acg.modle.house.House">
        SELECT
        <include refid="basic_columns"/>
        from dj_house
        where
        data_status=0
        <if test="cityId!=null and cityId!=''">
            and city_id = #{cityId}
        </if>
        <if test="villageId!=null and villageId!=''">
            and village_id = #{villageId}
        </if>
        and build_square &gt;= #{minSquare}
        and build_square &lt;= #{maxSquare}
        and house_type = #{houseType}
        and budget_ok = 3
    </select>

    <select id="getHouseList" resultType="com.dangjia.acg.dto.house.HouseListDTO">
        SELECT
        h.id as houseId,
        h.city_name as cityName,
        m.id as memberId,
        m.nick_name as memberName,
        m.mobile as mobile,
        h.visit_state as visitState,
        h.show_house as showHouse,
        h.style as style,
        h.square as square,
        h.build_square as buildSquare,
        h.decoration_type as decorationType,
        h.house_type as houseType,
        h.residential as residential,
        h.building as building,
        h.unit as unit,
        h.work_deposit_id as workDepositId,
        h.create_date AS createDate,
        h.modify_date AS modifyDate,
        h.construction_date as constructionDate,
        h.city_id as cityId,
        h.modeling_layout_id as modelingLayoutId,
        h.village_id as villageId,
        h.number as number,
        h.site_display as siteDisplay
        FROM
        dj_house h
        INNER JOIN dj_member m ON h.member_id = m.id
        WHERE
        h.data_status =0
        <if test="memberId!=null and memberId!=''">
            and m.id = #{memberId}
        </if>
        <if test="visitState!=null">
            and h.visit_state=#{visitState}
        </if>
        <if test="startDate!=null and endDate!=null and startDate!='' and endDate!=''">
            and h.create_date BETWEEN #{startDate} and #{endDate}
        </if>
        <if test="searchKey!=null and searchKey!=''">
            AND (
            m.mobile like CONCAT('%',#{searchKey},'%')
            or
            CONCAT(
            h.residential,
            IFNULL(h.building, '*'),
            '栋',
            IFNULL(CONCAT(h.unit, '单元'),'' ),
            IFNULL(h.number, '*'),
            '号'
            ) LIKE CONCAT('%',#{searchKey},'%')
            )
        </if>
        ORDER by
        h.create_date
        <if test="orderBy!=null and orderBy!=''and orderBy=='desc'">
            desc
        </if>

    </select>
    <select id="getActuaryAll" resultType="com.dangjia.acg.dto.house.HouseListDTO">
        SELECT
        h.id as houseId,
        CONCAT(
        h.residential,
        IFNULL(h.building, '*'),
        '栋',
        IFNULL(CONCAT(h.unit, '单元'),'' ),
        IFNULL(h.number, '*'),
        '号'
        ) houseName,
        h.city_name as cityName,
        h.budget_ok as budgetOk,
        h.custom_sort as customSort,
        m.nick_name as name,
        m.id as memberId,
        m.name as memberName,
        m.mobile as mobile,
        h.visit_state as visitState,
        h.show_house as showHouse,
        h.style as style,
        h.square as square,
        h.build_square as buildSquare,
        h.decoration_type as decorationType,
        h.house_type as houseType,
        h.residential as residential,
        h.building as building,
        h.unit as unit,
        h.work_deposit_id as workDepositId,
        h.create_date AS createDate,
        h.modify_date AS modifyDate,
        h.construction_date as constructionDate,
        h.number as number,
        ( CASE WHEN (h.decoration_type = 2 AND h.designer_ok != 3) THEN 1 ELSE 0 END ) AS showUpdata
        FROM
        dj_house h
        INNER JOIN dj_member m ON h.member_id = m.id
        WHERE
        (h.decoration_type = 2 or (h.decoration_type != 2 and h.designer_ok =3))
        <if test="dataStatus!=null and dataStatus!=''">
            AND h.data_status=#{dataStatus}
        </if>
        <if test="budgetOk!=null and budgetOk!=''">
            <if test="budgetOk==1">
                and (budget_ok =1 or budget_ok = 4)
            </if>
            <if test="budgetOk!=1">
                and budget_ok =#{budgetOk}
            </if>
        </if>

        <if test="searchKey!=null and searchKey!=''">
            AND (
            m.mobile like CONCAT('%',#{searchKey},'%')
            or
            CONCAT(
            h.residential,
            IFNULL(h.building, '*'),
            '栋',
            IFNULL(CONCAT(h.unit, '单元'),'' ),
            IFNULL(h.number, '*'),
            '号'
            ) LIKE CONCAT('%',#{searchKey},'%')
            )
        </if>
        ORDER by h.create_date desc

    </select>

    <select id="getHouseListLikeSearchKey" resultType="com.dangjia.acg.modle.house.House">
        SELECT
        h.id as id,
        h.building,
        h.city_name as cityName,
        h.residential,
        h.type,
        h.unit,
        h.member_id as memberId,
        h.task_number as taskNumber,
        h.square,
        h.number,
        h.style,
        h.pause,
        h.designer_ok as designerOk,
        h.budget_ok as budgetOk,
        h.image,
        h.decoration_type as decorationType,
        h.city_id as cityId,
        h.modeling_layout_id as modelingLayoutId,
        h.money,
        h.show_house as showHouse,
        h.village_id as villageId,
        h.refer_house_id as referHouseId,
        h.have_complete as haveComplete,
        h.record_type as recordType,
        h.build_square as buildSquare,
        h.again,
        h.house_type as houseType,
        h.drawings,
        h.work_deposit_id as workDepositId,
        h.custom_sort as customSort,
        h.construction_date as constructionDate,
        h.completed_date as completedDate,
        h.is_select as isSelect,
        (
        case
        when (f.supervisor_start = 1 or f.supervisor_start = 0) and h.visit_state !=2 and h.visit_state !=3 and h.visit_state !=4 and h.visit_state !=5 and
        h.pause=0 then f.supervisor_start
        when h.visit_state = 3 then 3
        when h.visit_state = 4 then 4
        when h.visit_state = 5 then 5
        when (h.visit_state = 2 or h.pause=1) then 2
        end
        ) as visitState,
        h.data_status as dataStatus,
        h.create_date as createDate,
        h.modify_date as modifyDate
        FROM
        dj_house h
        INNER JOIN dj_core_house_flow f ON h.id=f.house_id and f.worker_type=3 and f.work_type > 1
        INNER JOIN dj_member m ON h.member_id = m.id
        WHERE
        h.data_status =0
        <if test="visitState==0 || visitState==1">
            and f.supervisor_start = #{visitState} and h.visit_state !=2 and h.visit_state !=3 and h.visit_state !=4 and h.visit_state !=5 and h.pause=0
        </if>
        <if test="visitState>=2">
            and h.visit_state = #{visitState}
        </if>

        <if test="searchKey!=null and searchKey!=''">
            and ( m.mobile like CONCAT('%',#{searchKey},'%')
            or CONCAT(
            h.residential,
            IFNULL(h.building, '*'),
            '栋',
            IFNULL(CONCAT(h.unit, '单元'),'' ),
            IFNULL(h.number, '*'),
            '号'
            ) LIKE CONCAT('%',#{searchKey},'%')
            or m.nick_name like CONCAT('%',#{searchKey},'%')
            or m.name like CONCAT('%',#{searchKey},'%')
            )
        </if>
        ORDER by h.modify_date desc
    </select>

    <select id="getHouseDateByMemberId" parameterType="String" resultType="date">
        SELECT
         h.create_date
         from dj_member m
         INNER join dj_house h on m.id=h.member_id where m.id=#{memberId} and h.data_status =0 and h.visit_state =1
         ORDER BY create_date DESC limit 1
    </select>

    <select id="getRepairMend" resultType="com.dangjia.acg.dto.repair.RepairMendDTO">
        SELECT
            o.type as type,
            m.shop_count as shopCount
            FROM
            dj_repair_mend_order o
            INNER JOIN dj_repair_mend_materiel m ON m.mend_order_id = o.id
            WHERE
            o.type IN ( 2, 4 ) and o.state = 4
            AND o.house_id = #{houseId}
            AND m.product_id = #{productId}
    </select>

    <select id="getBuildDay" resultType="int">
        SELECT
            count( * )
        FROM
            (
            SELECT
                date_format( create_date, '%Y-%c-%d' ) AS post_date
            FROM
                dj_core_house_flow_apply
            WHERE
                house_id = #{houseId}
                AND apply_type in (0,1,2) and worker_type !=3
            GROUP BY
                post_date
            ORDER BY
                create_date DESC
            ) a;
    </select>


    <select id="getHouseProfitList" resultType="com.dangjia.acg.dto.house.DesignDTO">
        SELECT
        house.id AS houseId,
        CONCAT(
        house.residential,
        IFNULL(house.building, '*'),
        '栋',
        IFNULL(CONCAT(house.unit, '单元'),'' ),
        IFNULL(house.number, '*'),
        '号'
        ) houseName,
        house.designer_ok AS designerOk,
        house.residential AS residential,
        house.building AS building,
        house.unit AS unit,
        house.decoration_type AS decorationType,
        house.number AS number,
        house.visit_state AS visitState,
        member.nick_name AS nickName,
        member.NAME AS NAME,
        member.mobile AS mobile,
        house.construction_date AS createDate,
        house.completed_date AS modifyDate
        FROM
        dj_house house
        INNER JOIN dj_member member ON member.id = house.member_id
        WHERE house.data_status=0
        <if test="visitState!=null and visitState!=''">
            AND house.visit_state=#{visitState}
        </if>
        <if test="visitState==null or visitState==''">
            AND house.visit_state in (1,3,4)
        </if>
        <if test="searchKey!=null and searchKey!=''">
            AND (CONCAT(
            house.residential,
            IFNULL(house.building, '*'),
            '栋',
            IFNULL(CONCAT(house.unit, '单元'),'' ),
            IFNULL(house.number, '*'),
            '号'
            ) like CONCAT('%',#{searchKey},'%')
            OR member.mobile like CONCAT('%',#{searchKey},'%')
            OR member.name like CONCAT('%',#{searchKey},'%')
            )
        </if>
        ORDER BY house.create_date DESC
    </select>

    <select id="getHouseProfitSummary" resultType="com.dangjia.acg.dto.repair.HouseProfitSummaryDTO">
        SELECT
            number,
            info,
            type,
            money,
            plus,
            date
        FROM
        (
            (
            SELECT
            o.business_order_number number,
            CONCAT(w.`name`, '抢单') info,
            CONCAT('o', o.worker_type) type,
            o.total_price money,
            '0' plus,
            o.`create_date` date
            FROM
            `dj_core_house_worker_order` o
            INNER JOIN dj_core_worker_type w ON o.worker_type_id = w.id
            WHERE
            o.`house_id` = #{houseId}
            AND o.pay_state = 1
            )
        UNION ALL
        (
            SELECT
            number,
            order_name info,
            CONCAT('m', type) type,
            IFNULL(
            actual_total_amount,
            total_amount
            ) money,
            (
            CASE
            WHEN type = 0 THEN
            0
            WHEN type = 1 THEN
            0
            ELSE
            1
            END
            ) AS plus,
            `create_date` date
            FROM
            `dj_repair_mend_order`
            WHERE
            `house_id` = #{houseId}
            AND state = 4
            )
        UNION ALL
        (
        SELECT
        '-' number,
        NAME info,
        CONCAT('d', state) type,
        money,
        (
        CASE
        WHEN state = 3 THEN
        0
        ELSE
        1
        END
        ) AS plus,
        `create_date` date
        FROM
        `dj_worker_worker_detail`
        WHERE
        `house_id` = #{houseId}
        AND money != 0
        )
        UNION ALL
        (
        SELECT
        number,
        CONCAT('供应商发货结算') info,
        CONCAT('f0') type,
        apply_money money,
        '1' plus,
        `create_date` date
        FROM
        `dj_deliver_split_deliver`
        WHERE
        `house_id` = #{houseId}
        AND `apply_state` = 2 AND `data_status` = 0
        )
        UNION ALL
        (
        SELECT
        number,
        CONCAT('供应商退货结算') info,
        CONCAT('f1') type,
        apply_money money,
        '0' plus,
        `create_date` date
        FROM
        `dj_repair_mend_deliver`
        WHERE
        `house_id` = #{houseId}
        AND `apply_state` = 2 AND `data_status` = 0
        )
        ) a
        ORDER BY
        a.date DESC
    </select>
</mapper>

