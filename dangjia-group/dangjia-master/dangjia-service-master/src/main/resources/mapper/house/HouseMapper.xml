<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dangjia.acg.mapper.house.IHouseMapper">
    <sql id="basic_columns">
        id,
        building,
        city_name as cityName,
        residential,
        type,
        unit,
        member_id as memberId,
        task_number as taskNumber,
        square,
        number,
        designer_ok as designerOk,
        budget_ok as budgetOk,
        image,
        decoration_type as decorationType,
        city_id as cityId,
        modeling_layout_id as modelingLayoutId,
        money,
        pause,
        show_house as showHouse,
        village_id as villageId,
        refer_house_id as referHouseId,
        have_complete as haveComplete,
        record_type as recordType,
        build_square as buildSquare,
        again,
        house_type as houseType,
        drawings,
        work_deposit_id as workDepositId,
        custom_sort as customSort,
        is_select as isSelect,
        visit_state as visitState,
        data_status as dataStatus,
        create_date as createDate,
        construction_date as constructionDate,
        modify_date as modifyDate,
        h.optional_label as optionalLabel
    </sql>
    <sql id="basic_h_columns">
        h.id,
        h.building,
        h.city_name as cityName,
        h.residential,
        h.type,
        h.unit,
        h.member_id as memberId,
        h.task_number as taskNumber,
        h.square,
        h.number,
        h.designer_ok as designerOk,
        h.budget_ok as budgetOk,
        h.image,
        h.decoration_type as decorationType,
        h.city_id as cityId,
        h.modeling_layout_id as modelingLayoutId,
        h.money,
        h.pause,
        h.show_house as showHouse,
        h.village_id as villageId,
        h.refer_house_id as referHouseId,
        h.have_complete as haveComplete,
        h.record_type as recordType,
        h.build_square as buildSquare,
        h.again,
        h.house_type as houseType,
        h.drawings,
        h.work_deposit_id as workDepositId,
        h.custom_sort as customSort,
        h.is_select as isSelect,
        h.visit_state as visitState,
        h.data_status as dataStatus,
        h.create_date as createDate,
        h.construction_date as constructionDate,
        h.modify_date as modifyDate,
        h.optional_label as optionalLabel
    </sql>
    <select id="getDesignList" resultType="com.dangjia.acg.dto.house.DesignDTO">
        SELECT
        house.id AS houseId,
        house.designer_ok AS designerOk,
        house.residential AS residential,
        house.building AS building,
        house.unit AS unit,
        house.decoration_type AS decorationType,
        house.number AS number,
        house.member_id as memberId,
        house.create_date as startDate,
        member.nick_name AS nickName,
        member.NAME AS NAME,
        member.mobile AS mobile,
        s.store_name storeName,
        gr.operatorName,
        gr.operatorMobile,
        gr.operatorId,
        IFNULL(ma.address,CONCAT(
        house.residential,
        IFNULL(house.building, '*'),
        '栋',
        IFNULL(CONCAT(house.unit, '单元'),'' ),
        IFNULL(house.number, '*'),
        '号'
        )) houseName,
        ma.input_area inputArea
        FROM
        dj_house house
        INNER JOIN dj_member member ON member.id = house.member_id
        LEFT JOIN dj_member_address ma on house.id=ma.house_id
        LEFT JOIN (
        SELECT
        wk.house_id,
        wk.create_date,
        gr.name operatorName,
        gr.mobile operatorMobile,
        gr.id operatorId
        FROM
        dj_core_house_worker wk
        LEFT JOIN dj_member gr ON gr.id = wk.worker_id
        WHERE
        wk.worker_type = 1 and  wk.work_type in (1,6)
        ORDER BY
        wk.house_id,
        wk.create_date DESC
        ) gr on gr.house_id=house.id
        LEFT JOIN dj_store s ON FIND_IN_SET(
        house.village_id,
        s.villages
        )
        WHERE 1=1
        <if test="workerKey!=null and workerKey!=''">
            AND CONCAT(gr.operatorName,gr.operatorMobile) like CONCAT('%',#{workerKey},'%')
        </if>
        <if test="userId!=null and userId!=''">
            AND gr.operatorId = #{userId}
        </if>
        <if test="dataStatus == 1">
            AND house.data_status=1 AND house.visit_state=1 and house.designer_ok != 3
        </if>
        <if test="dataStatus == 0">
            AND house.data_status=0
        </if>
        <if test="designerType == 0">
            AND house.designer_ok IN (0, 4)
            AND house.decoration_type = 1
            AND house.visit_state = 1
        </if>
        <if test="designerType == 1">
            AND house.visit_state=1
            AND house.decoration_type !=2
            AND house.designer_ok =1
        </if>
        <if test="designerType == 2">
            AND house.decoration_type=1
            AND house.designer_ok in (1,9,5,6)
        </if>
        <if test="designerType == 3">
            AND house.visit_state=1
            AND house.decoration_type=1
            AND house.designer_ok in (2,7,8)
        </if>
        <if test="designerType == 4">
            AND house.designer_ok =3
        </if>
        <!--增加抢单提前结束 designerType = 5-抢单  designerType = 6 -提前结束 -->
        <if test="designerType == 5">
            AND house.designer_ok = 4
        </if>
        <!--增加抢单提前结束 designerType = 5-抢单  designerType = 6 -提前结束 -->
        <if test="designerType == 6">
            AND house.visit_state = 4
            AND house.budget_ok = 0
        </if>
        <if test="cityKey!=null and cityKey!=''">
            AND FIND_IN_SET(house.city_id,#{cityKey})
        </if>
        <if test="searchKey!=null and searchKey!=''">
            AND (CONCAT(
            house.residential,
            IFNULL(house.building, '*'),
            '栋',
            IFNULL(CONCAT(house.unit, '单元'),'' ),
            IFNULL(house.number, '*'),
            '号'
            ) like CONCAT('%',#{searchKey},'%')
            OR member.mobile like CONCAT('%',#{searchKey},'%')
            )
        </if>
        GROUP BY house.id
        ORDER BY house.create_date DESC
    </select>

    <select id="startWorkPage" resultType="com.dangjia.acg.dto.house.HouseDTO">
        SELECT id                 as houseId,
               city_id            as cityId,
               city_name          as cityName,
               village_id         as villageId,
               residential,
               modeling_layout_id as modelingLayoutId,
               building,
               unit,
               number,
               square,
               work_deposit_id    as workDepositId,
               refer_house_id     as referHouseId,
               house_type         as houseType,
               drawings,
               decoration_type    as decorationType
        FROM dj_house
        WHERE data_status = 0
          AND id = #{houseId}
    </select>

    <!-- 根据房子ID查询对应的房子信息-->
    <select id="getHouseDetailByHouseId"  resultType="com.dangjia.acg.dto.house.HouseDTO">
        SELECT
            h.id houseId,
            m.id AS memberId,
            m. NAME AS memberName,
            m.mobile AS mobile,
            IFNULL(
                ma.address,
                CONCAT(
                    h.residential,
                    IFNULL(h.building, '*'),
                    '栋',
                    IFNULL(CONCAT(h.unit, '单元'), ''),
                    IFNULL(h.number, '*'),
                    '号'
                )
            ) address,
            IFNULL(ma.input_area, h.square) inputArea
        FROM
            dj_house h
        INNER JOIN dj_member m ON h.member_id = m.id
        LEFT JOIN dj_member_address ma ON h.id = ma.house_id
        WHERE house_id=#{houseId}
    </select>

    <!-- 查询当前房子的订单详情(包含增值商品信息的查询)-->
    <select id="getBudgetOrderDetailByHouseId" resultType="com.dangjia.acg.dto.house.HouseOrderDetailDTO">
        SELECT
            t.id orderId,
            t1.id orderItemId,
            IFNULL(t1.image, t2.image) image,
            t1.product_name productName,
            t1.price,
            IFNULL(t1.total_price,t1.price*t1.shop_count) totalPrice,
            t1.shop_count shopCount,
            t2.prod_template_id productTemplateId,
            t1.product_id productId,
            t1.worker_type_id workerTypeId,
            t.order_number as orderNumber,
            t.order_status as orderStatus
        FROM
            dj_deliver_order t,
            dj_deliver_order_item t1,
            dj_basics_storefront_product t2
            <if test="workerTypeId!=null and workerTypeId!=''">
                ,dj_pay_business_order t3
            </if>
        WHERE
            t.id = t1.order_id
        AND t1.product_id = t2.id
        AND t.house_id = #{houseId}
        <if test="workerTypeId!=null and workerTypeId!=''">
            AND t1.worker_type_id =#{workerTypeId}
            and t.business_order_number=t3.number
            and t3.state = 3
        </if>
        UNION ALL
        SELECT
        t.id orderId,
        t1.id orderItemId,
        t2.image image,
        t3.product_name productName,
        t3.price,
        IFNULL(t3.price*t1.shop_count,0) totalPrice,
        t1.shop_count shopCount,
        t2.prod_template_id productTemplateId,
        t3.added_product_id productId,
        t1.worker_type_id workerTypeId,
        t.order_number as orderNumber,
        t.order_status as orderStatus
        FROM
        dj_deliver_order t,
        dj_deliver_order_item t1,
        dj_basics_storefront_product t2,
        dj_deliver_order_added_product t3
        <if test="workerTypeId!=null and workerTypeId!=''">
            ,dj_pay_business_order t4
        </if>
        WHERE
        t.id = t1.order_id
        AND t3.added_product_id= t2.id
        and t1.id=t3.any_order_id
        AND t.house_id = #{houseId}
        <if test="workerTypeId!=null and workerTypeId!=''">
            AND t1.worker_type_id =#{workerTypeId}
            and t.business_order_number=t4.number
            and t4.state = 3
        </if>
    </select>

    <select id="getOrderDetailByHouseId" resultType="com.dangjia.acg.dto.house.HouseOrderDetailDTO">
        SELECT
        t.id orderId,
        t1.id orderItemId,
        IFNULL(t1.image, t2.image) image,
        t1.product_name productName,
        t1.price,
        IFNULL(t1.total_price,t1.price*t1.shop_count) totalPrice,
        t1.shop_count shopCount,
        t2.prod_template_id productTemplateId,
        t1.product_id productId,
        t1.worker_type_id workerTypeId,
        t.order_number as orderNumber,
        t.order_status as orderStatus
        FROM
            dj_deliver_order t,
            dj_deliver_order_item t1,
            dj_basics_storefront_product t2,
            dj_pay_business_order t3
        WHERE
        t.id = t1.order_id
        AND t1.product_id = t2.id
        AND t.house_id = #{houseId}
        AND t1.worker_type_id =#{workerTypeId}
        and t.business_order_number=t3.number
        and t3.state in(1,2)
        UNION ALL
        SELECT
        t.id orderId,
        t1.id orderItemId,
        t2.image image,
        t3.product_name productName,
        t3.price,
        IFNULL(t3.price*t1.shop_count,0) totalPrice,
        t1.shop_count shopCount,
        t2.prod_template_id productTemplateId,
        t3.added_product_id productId,
        t1.worker_type_id workerTypeId,
        t.order_number as orderNumber,
        t.order_status as orderStatus
        FROM
        dj_deliver_order t,
        dj_deliver_order_item t1,
        dj_basics_storefront_product t2,
        dj_deliver_order_added_product t3,
        dj_pay_business_order t4
        WHERE
        t.id = t1.order_id
        AND t3.added_product_id= t2.id
        and t1.id=t3.any_order_id
        AND t.house_id = #{houseId}
        AND t1.worker_type_id =#{workerTypeId}
        and t.business_order_number=t4.number
        and t4.state in(1,2)
    </select>

    <!-- 查询当前房子的订单详情(包含增值商品信息的查询)-->
    <select id="getBudgetOrderDetailByInFo" resultType="com.dangjia.acg.dto.house.HouseOrderDetailDTO">
        SELECT
        t.id orderId,
        t1.id orderItemId,
        IFNULL(t1.image, t2.image) image,
        t1.product_name productName,
        t1.price,
        IFNULL(t1.total_price,t1.price*t1.shop_count) totalPrice,
        t1.shop_count shopCount,
        t2.prod_template_id productTemplateId,
        t1.product_id productId,
        t1.worker_type_id workerTypeId,
        t.order_number as orderNumber,
        t.order_status as orderStatus,
        ho.business_id as businessId
        FROM
        dj_core_house_worker ho,
        dj_deliver_order t,
        dj_deliver_order_item t1,
        dj_basics_storefront_product t2
        <if test="workerTypeId!=null and workerTypeId!=''">
            ,dj_pay_business_order t3
        </if>
        WHERE
        t.id = t1.order_id
        AND ho.order_id = t.id
        AND t1.product_id = t2.id
        AND t.house_id = #{houseId}
        and ho.house_id=t.house_id
        and t1.shop_count > t1.return_count
        <if test="workerTypeId!=null and workerTypeId!=''">
            <if test="type != null">
                AND ho.worker_type_id =#{workerTypeId}
                AND ho.type = #{type}
            </if>
            <if test="type == null">
                AND t1.worker_type_id =#{workerTypeId}
            </if>
            and t.business_order_number=t3.number
            and t3.state = 3
        </if>
        UNION ALL
        SELECT
        t.id orderId,
        t1.id orderItemId,
        t2.image image,
        t3.product_name productName,
        t3.price,
        IFNULL(t3.price*t1.shop_count,0) totalPrice,
        t1.shop_count shopCount,
        t2.prod_template_id productTemplateId,
        t3.added_product_id productId,
        t1.worker_type_id workerTypeId,
        t.order_number as orderNumber,
        t.order_status as orderStatus,
        ho.business_id as businessId
        FROM
        dj_core_house_worker ho,
        dj_deliver_order t,
        dj_deliver_order_item t1,
        dj_basics_storefront_product t2,
        dj_deliver_order_added_product t3
        <if test="workerTypeId!=null and workerTypeId!=''">
            ,dj_pay_business_order t4
        </if>
        WHERE
        t.id = t1.order_id
        AND ho.order_id = t.id
        AND t3.added_product_id= t2.id
        and t1.id=t3.any_order_id
        AND t.house_id = #{houseId}
        and ho.house_id=t.house_id
        and t1.shop_count > t1.return_count
        <if test="workerTypeId!=null and workerTypeId!=''">
            <if test="type != null">
                AND ho.worker_type_id =#{workerTypeId}
                AND ho.type = #{type}
            </if>
            <if test="type == null">
                AND t1.worker_type_id =#{workerTypeId}
            </if>
            and t.business_order_number=t4.number
            and t4.state = 3
        </if>
    </select>

    <select id="queryTestNumber" resultType="java.lang.Integer">
       select count(*) from
            dj_basics_product_template t,
            dj_basics_technology t1,
            dj_matter_technology_record t2,
            dj_core_house_flow_apply t3
        where
            FIND_IN_SET(t1.id,t.technology_ids)
        and t2.technology_Id = t1.id
        and t2.house_flow_apply_id = t3.id
        and t3.worker_id = #{workerId}
        and t2.house_id= #{houseId}
        and t.id = #{id}
        and t1.type in(2,3)
    </select>

    <select id="queryArrNumber" resultType="java.lang.Integer">
        select count(*) from
            dj_basics_product_template t,
            dj_basics_technology t1
        where
            FIND_IN_SET(t1.id,t.technology_ids)
        and t.id = #{id}
    </select>

    <select id="getBudgetOrderNewInfo" resultType="com.dangjia.acg.dto.house.HouseOrderDetailDTO">
        SELECT
        t.id orderId,
        t1.id orderItemId,
        IFNULL(t1.image, t2.image) image,
        t1.product_name productName,
        t1.price,
        IFNULL(t1.total_price,t1.price*t1.shop_count) totalPrice,
        t1.shop_count shopCount,
        t2.prod_template_id productTemplateId,
        t1.product_id productId,
        t1.worker_type_id workerTypeId
        FROM
        dj_deliver_order t,
        dj_deliver_order_item t1,
        dj_basics_storefront_product t2,
        dj_pay_business_order t3
        WHERE
        t.id = t1.order_id
        AND t1.product_id = t2.id
        and t.business_order_number=t3.number
        and t3.state = 3
        AND t.house_id = #{houseId}
        AND t1.worker_type_id =#{workerTypeId}
        and t1.shop_count>IFNULL(t1.return_count,0)+IFNULL(t1.ask_count,0)
    </select>
    <!--查询是否有待处理的补差价单-->
    <select id="getBudgetDifferenceOrder" resultType="com.dangjia.acg.dto.house.HouseOrderDetailDTO">

       SELECT
        t.id orderId,
        t1.id orderItemId,
        IFNULL(t1.image, t2.image) image,
        t1.product_name productName,
        t1.price,
        IFNULL(t1.total_price,t1.price*t1.shop_count) totalPrice,
        t1.shop_count shopCount,
        t1.product_id productId,
        t1.worker_type_id workerTypeId
        FROM
        dj_deliver_order t,
        dj_deliver_order_item t1,
        dj_pay_business_order t2
        WHERE
        t.id = t1.order_id
        AND t.business_order_number = t2.number
        AND t.house_id = #{houseId}
        AND t1.worker_type_id =#{workerTypeId}
        and t2.state in(1,2)
    </select>

    <!-- 可以默认配置的设计商品，精算师选择-->
    <select id="selectDesignProductList" resultType="com.dangjia.acg.dto.house.HouseOrderDetailDTO">
         SELECT
          t1.product_id productTemplateId,
          t3.name productName,
          t3.image,
          t3.price
        FROM
            dj_actuarial_product_config t1,
            dj_basics_product_template t3
        WHERE t1.product_id = t3.id
        and t1.city_id=#{cityId}
        and t1.worker_type_id=#{workerTypeId}
        and t1.service_type_id=#{serviceTypeId}
    </select>
    <!--查询所有的房子 指定房子 装修状态-->
    <select id="getAllHouseByVisitState" resultType="com.dangjia.acg.modle.house.House">
        SELECT
        <include refid="basic_columns"/>
        FROM dj_house
        WHERE
        data_status=0
        AND visit_state=#{visitState}
    </select>


    <!--查询所有的房子 指定房子 装修状态-->
    <select id="getByLikeAddress" resultType="com.dangjia.acg.modle.house.House">
        SELECT
        house.id,
        house.member_id as memberId,
        house.residential,
        house.building,
        house.unit,
        house.number,
        house.data_status as dataStatus,
        house.create_date as createDate,
        house.construction_date as constructionDate,
        house.modify_date as modifyDate,
        (SELECT COUNT(*) from dj_deliver_order_split ddos where ddos.apply_status = 1 and ddos.house_id = house.id) as waitCount,
        (SELECT COUNT(*) from dj_deliver_order_split ddos where ddos.apply_status = 2 and ddos.house_id = house.id) as sendCount
        FROM dj_house as house
        inner join dj_deliver_order_split  as dos on dos.house_id=house.id
        WHERE house.visit_state > 0
        <if test="storefrontId!=null and storefrontId!=''">
            and dos.storefront_id = #{storefrontId}
        </if>
        <if test="cityId!=null and cityId!=''">
            and house.city_id = #{cityId}
        </if>
        <if test="startDate!=null and endDate!=null and startDate!='' and endDate!=''">
            and house.construction_date BETWEEN #{startDate} and #{endDate}
        </if>
        <if test="likeAddress!=null and likeAddress!=''">
            AND CONCAT(
            house.residential,
            IFNULL(house.building, '*'),
            '栋',
            IFNULL(CONCAT(house.unit, '单元'),'' ),
            IFNULL(house.number, '*'),
            '号'
            ) LIKE
            CONCAT('%',#{likeAddress},'%')

        </if>
        group by house.id
        ORDER BY waitCount DESC,sendCount DESC,house.create_date DESC
    </select>

    <select id="getStatisticsByDate" resultType="com.dangjia.acg.modle.house.House">
        SELECT id, budget_ok as budgetOk
        FROM dj_house
        WHERE designer_ok = 3
          AND data_status = 0
          AND modify_date BETWEEN #{start} AND #{end}
        ORDER BY create_date ASC
    </select>
    <!--根据城市、小区，最大最小面积搜索-->
    <select id="getSameLayout" resultType="com.dangjia.acg.modle.house.House">
        SELECT
        <include refid="basic_h_columns"/>
        <if test="villageId!=null and villageId!=''">
            , (
            SELECT
            (
            st_distance (
            point (v.locationx, v.locationy),
            point (mv.locationx, mv.locationy)
            ) * 111195 / 1000
            ) AS juli
            FROM
            `dj_house_modeling_village` mv
            WHERE
            mv.locationx IS NOT NULL
            AND mv.id = #{villageId}
            ) juli
        </if>
        from dj_house h
        INNER JOIN `dj_house_modeling_village` v ON h.village_id = v.id
        INNER JOIN (SELECT a.house_id,COUNT(a.id) num FROM `dj_design_quantity_room_images`  a GROUP BY a.house_id ) b ON
        b.house_id=h.id
        where
        h.data_status=0
        <if test="cityId!=null and cityId!=''">
            and h.city_id = #{cityId}
        </if>

        <if test="minSquare!=null and minSquare!=''">
            and h.build_square &gt;= #{minSquare}
        </if>
        <if test="maxSquare!=null and maxSquare!=''">
            and h.build_square &lt;= #{maxSquare}
        </if>
        <if test="houseType!=null and houseType!=''">
            and h.house_type = #{houseType}
        </if>
        and h.site_display=0
        AND h.visit_state in(1,3)
        <if test="villageId!=null and villageId!=''">
            ORDER BY FIELD(h.village_id,#{villageId}) DESC,juli,b.num DESC
        </if>
        <if test="villageId==null or villageId==''">
            order by b.num desc
        </if>

    </select>
    <!--参考花费-->
    <select id="getSameLayoutDistance" resultType="com.dangjia.acg.modle.house.House">
        SELECT
        <include refid="basic_h_columns"/>
        from dj_house h
        INNER JOIN (SELECT a.house_id,COUNT(a.id) num FROM dj_core_house_flow_apply a GROUP BY a.house_id ) b ON
        b.house_id=h.id
        INNER JOIN (
        SELECT
        mv.*, (
        st_distance (
        point (mv.locationx, mv.locationy),
        point (#{locationx}	,#{locationy})
        ) * 111195 / 1000
        ) AS juli
        FROM
        `dj_house_modeling_village` mv
        WHERE
        mv.locationx IS NOT NULL
        AND mv.id=#{villageId}
        ) v ON v.id = h.village_id
        where
        h.data_status=0
        <if test="cityId!=null and cityId!=''">
            and h.city_id = #{cityId}
        </if>
        and site_display=0
        AND visit_state in(1,3)
        ORDER BY
        <if test="minSquare!=null and minSquare!='' and maxSquare!=null and maxSquare!=''">
            IF(( h.build_square &gt;= #{minSquare} AND h.build_square &lt;= #{maxSquare}), 0, 1 ) ,
        </if>
        v.juli ASC
    </select>
    <!--参考报价-->
    <select id="getReferenceBudget" resultType="com.dangjia.acg.modle.house.House">
        SELECT
        <include refid="basic_columns"/>
        from dj_house
        where
        data_status=0
        <if test="cityId!=null and cityId!=''">
            and city_id = #{cityId}
        </if>
        <if test="villageId!=null and villageId!=''">
            and village_id = #{villageId}
        </if>
        and build_square &gt;= #{minSquare}
        and build_square &lt;= #{maxSquare}
        and house_type = #{houseType}
        and budget_ok = 3
    </select>

    <select id="getHouseList" resultType="com.dangjia.acg.dto.house.HouseListDTO">
        SELECT
        h.id as houseId,
        h.city_name as cityName,
        m.id as memberId,
        m.nick_name as memberName,
        m.mobile as mobile,
        h.visit_state as visitState,
        h.show_house as showHouse,
        h.square as square,
        h.build_square as buildSquare,
        h.decoration_type as decorationType,
        h.house_type as houseType,
        h.residential as residential,
        h.building as building,
        h.unit as unit,
        h.work_deposit_id as workDepositId,
        h.create_date AS createDate,
        h.modify_date AS modifyDate,
        h.construction_date as constructionDate,
        h.city_id as cityId,
        h.modeling_layout_id as modelingLayoutId,
        h.village_id as villageId,
        h.number as number,
        h.site_display as siteDisplay
        FROM
        dj_house h
        INNER JOIN dj_member m ON h.member_id = m.id
        <choose>
            <when test="(userKey==null or userKey=='')">
                LEFT JOIN dj_member_customer mc on mc.member_id = m.id
            </when>
            <otherwise>
                INNER JOIN dj_member_customer mc on mc.member_id = m.id
                <if test="userKey!=null and userKey!=''">
                    AND FIND_IN_SET(mc.user_id,#{userKey})
                </if>
            </otherwise>
        </choose>
        LEFT JOIN dj_member_customer_record mcr on mc.remind_record_id = mcr.id
        WHERE
        h.data_status =0
        <if test="cityKey!=null and cityKey!=''">
            AND FIND_IN_SET(h.city_id,#{cityKey})
        </if>
        <if test="memberId!=null and memberId!=''">
            and m.id = #{memberId}
        </if>
        <if test="visitState!=null">
            and h.visit_state=#{visitState}
        </if>
        <if test="startDate!=null and endDate!=null and startDate!='' and endDate!=''">
            and h.create_date BETWEEN #{startDate} and #{endDate}
        </if>
        <if test="searchKey!=null and searchKey!=''">
            AND (
            m.mobile like CONCAT('%',#{searchKey},'%')
            or
            CONCAT(
            h.residential,
            IFNULL(h.building, '*'),
            '栋',
            IFNULL(CONCAT(h.unit, '单元'),'' ),
            IFNULL(h.number, '*'),
            '号'
            ) LIKE CONCAT('%',#{searchKey},'%')
            )
        </if>
        ORDER by
        h.create_date
        <if test="orderBy!=null and orderBy!=''and orderBy=='desc'">
            desc
        </if>

    </select>
    <select id="getActuaryAll" resultType="com.dangjia.acg.dto.house.HouseListDTO">
        SELECT
        h.id as houseId,
        IFNULL(ma.address,CONCAT(
        h.residential,
        IFNULL(h.building, '*'),
        '栋',
        IFNULL(CONCAT(h.unit, '单元'),'' ),
        IFNULL(h.number, '*'),
        '号'
        )) houseName,
        h.city_name as cityName,
        h.budget_ok as budgetOk,
        h.designer_ok as designerOk,
        h.custom_edit as customEdit,
        h.custom_sort as customSort,
        m.nick_name as name,
        m.id as memberId,
        m.name as memberName,
        m.mobile as mobile,
        h.visit_state as visitState,
        h.show_house as showHouse,
        h.square as square,
        h.build_square as buildSquare,
        h.decoration_type as decorationType,
        h.house_type as houseType,
        h.residential as residential,
        h.building as building,
        h.unit as unit,
        h.work_deposit_id as workDepositId,
        h.create_date AS createDate,
        h.modify_date AS modifyDate,
        h.construction_date as constructionDate,
        h.number as number,
        h.optional_label as optionalLabel,
        ( CASE WHEN (h.decoration_type = 2 AND h.designer_ok != 3) THEN 1 ELSE 0 END ) AS showUpdata,
        s.store_name storeName,
        gr.operatorName,
        gr.operatorMobile,
        gr.operatorId,
        ma.input_area inputArea
        FROM
        dj_house h
        INNER JOIN dj_member m ON h.member_id = m.id
        LEFT JOIN dj_member_address ma on h.id=ma.house_id
        LEFT JOIN (
        SELECT
        wk.house_id,
        wk.create_date,
        gr.name operatorName,
        gr.mobile operatorMobile,
        gr.id operatorId
        FROM
        dj_core_house_worker wk
        LEFT JOIN dj_member gr ON gr.id = wk.worker_id
        WHERE
        wk.worker_type = 2 and  wk.work_type in (1,6)
        ORDER BY
        wk.house_id,
        wk.create_date DESC
        ) gr on gr.house_id=h.id
        LEFT JOIN dj_store s ON FIND_IN_SET(
        h.village_id,
        s.villages
        )
        WHERE
        (h.decoration_type = 2 or (h.decoration_type != 2 and h.designer_ok =3))
        <if test="budgetStatus!=null and budgetStatus!=''">
            and h.budget_ok = #{budgetStatus}
        </if>
        <if test="decorationType!=null and decorationType == 2">
            and h.decoration_type = #{decorationType}
        </if>
        <if test="decorationType!=null and decorationType == 1">
            and h.decoration_type != 2
        </if>
        <if test="budgetOk != 0 and workerKey!=null and workerKey!=''">
            AND CONCAT(gr.operatorName,gr.operatorMobile) like CONCAT('%',#{workerKey},'%')
        </if>
        <if test="budgetOk > 0 and budgetOk !=5 and  userId!=null and userId!=''">
            and gr.operatorId = #{userId}
        </if>
        <if test="dataStatus == 1">
            AND h.data_status=1  and h.budget_ok != 3 and h.budget_ok >0
        </if>
        <if test="dataStatus == 0">
            AND h.data_status=0
        </if>
        <if test="cityId!=null and cityId!=''">
            and h.city_id = #{cityId}
        </if>
        <if test="budgetOk!=null and budgetOk!=''">
            <if test="budgetOk==1">
                and (h.budget_ok =1 or h.budget_ok = 4 or h.budget_ok = 6)
            </if>
            <choose>
                <when test="userId != null and userId != ''">

                </when>
                <otherwise>
                    <if test="budgetOk!=1">
                        and h.budget_ok =#{budgetOk}
                    </if>
                </otherwise>
            </choose>
        </if>

        <if test="searchKey!=null and searchKey!=''">
            AND (
            m.mobile like CONCAT('%',#{searchKey},'%')
            or
            CONCAT(
            h.residential,
            IFNULL(h.building, '*'),
            '栋',
            IFNULL(CONCAT(h.unit, '单元'),'' ),
            IFNULL(h.number, '*'),
            '号'
            ) LIKE CONCAT('%',#{searchKey},'%')
            )
        </if>

        GROUP BY h.id
        ORDER by h.create_date desc

    </select>

    <select id="getHouseListLikeSearchKey" resultType="com.dangjia.acg.modle.house.House">
        SELECT
        f.supName,
        f.supMobile,
        m.name ownerName,
        m.nick_name ownerNickName,
        m.mobile ownerMobile,
        h.id as id,
        h.building,
        h.city_name as cityName,
        h.residential,
        h.type,
        h.unit,
        h.member_id as memberId,
        h.task_number as taskNumber,
        h.square,
        h.number,
        h.pause,
        h.designer_ok as designerOk,
        h.budget_ok as budgetOk,
        h.image,
        h.decoration_type as decorationType,
        h.city_id as cityId,
        h.modeling_layout_id as modelingLayoutId,
        h.money,
        h.show_house as showHouse,
        h.village_id as villageId,
        h.refer_house_id as referHouseId,
        h.have_complete as haveComplete,
        h.record_type as recordType,
        h.build_square as buildSquare,
        h.again,
        h.house_type as houseType,
        h.drawings,
        h.work_deposit_id as workDepositId,
        h.custom_sort as customSort,
        o.create_date as constructionDate,
        h.completed_date as completedDate,
        h.is_select as isSelect,
        (
        case
        when (f.supervisor_start = 1 or f.supervisor_start = 0 ) and h.visit_state !=2 and h.visit_state !=3 and h.visit_state !=4 and h.visit_state !=5 and
        h.pause=0 then f.supervisor_start
        when h.visit_state = 3 then 3
        when h.visit_state = 4 then 4
        when h.visit_state = 5 then 5
        when (h.visit_state = 2 or h.pause=1) then 2
        end
        ) as visitState,
        h.data_status as dataStatus,
        h.create_date as createDate,
        h.modify_date as modifyDate
        FROM
        dj_house h
        INNER JOIN (
            SELECT f.house_id,f.supervisor_start ,m.`name` supName,m.mobile supMobile
            FROM dj_core_house_flow f
            LEFT JOIN dj_member m ON f.worker_id = m.id
            WHERE f.worker_type=3 and f.work_type > 1
        ) f ON h.id=f.house_id
        INNER JOIN dj_member m ON h.member_id = m.id
        <if test="(visitState &lt;= 0 ) and !(startDate!=null and endDate!=null and startDate!='' and endDate!='')">
            LEFT JOIN (
                SELECT po.house_id,MIN(po.create_date) create_date from dj_core_house_flow_apply po  where po.apply_type = 4
                GROUP BY po.house_id
            ) o on o.house_id=h.id
        </if>
        <if test="(visitState &gt; 0 ) or (startDate!=null and endDate!=null and startDate!='' and endDate!='')">
            INNER JOIN (
            SELECT po.house_id,MIN(po.create_date) create_date from dj_core_house_flow_apply po  where po.apply_type = 4
            GROUP BY po.house_id
            ) o on o.house_id=h.id
        </if>
        WHERE
        h.data_status =0
        <if test="cityKey!=null and cityKey!=''">
            AND FIND_IN_SET(h.city_id,#{cityKey})
        </if>
        <if test="visitState==0 || visitState==1">
            and f.supervisor_start = #{visitState} and h.visit_state !=2 and h.visit_state !=3 and h.visit_state !=4 and h.visit_state !=5 and h.pause=0
        </if>
        <if test="visitState>=2">
            and h.visit_state = #{visitState}
        </if>
        <if test="startDate!=null and endDate!=null and startDate!='' and endDate!=''">
            and o.create_date BETWEEN #{startDate} and #{endDate}
        </if>
        <if test="supKey!=null and supKey!=''">
            and (
            f.supName like CONCAT('%',#{supKey},'%')
            or
            f.supMobile like CONCAT('%',#{supKey},'%')
            )
        </if>
        <if test="searchKey!=null and searchKey!=''">
            and ( m.mobile like CONCAT('%',#{searchKey},'%')
            or CONCAT(
            h.residential,
            IFNULL(h.building, '*'),
            '栋',
            IFNULL(CONCAT(h.unit, '单元'),'' ),
            IFNULL(h.number, '*'),
            '号'
            ) LIKE CONCAT('%',#{searchKey},'%')
            or m.nick_name like CONCAT('%',#{searchKey},'%')
            or m.name like CONCAT('%',#{searchKey},'%')
            )
        </if>
        ORDER by h.modify_date desc
    </select>

    <select id="getHouseDateByMemberId" parameterType="String" resultType="date">
        SELECT
         h.construction_date
         from dj_member m
         INNER join dj_house h on m.id=h.member_id where m.id=#{memberId} and h.data_status =0 and h.visit_state =1
         ORDER BY  h.construction_date limit 1
    </select>

    <select id="getRepairMend" resultType="com.dangjia.acg.dto.repair.RepairMendDTO">
        SELECT
            o.type as type,
            m.shop_count as shopCount
            FROM
            dj_repair_mend_order o
            INNER JOIN dj_repair_mend_materiel m ON m.mend_order_id = o.id
            WHERE
            o.type IN ( 2, 4 ) and o.state = 4
            AND o.house_id = #{houseId}
            AND m.product_id = #{productId}
    </select>

    <select id="getBuildDay" resultType="int">
        SELECT
            count( * )
        FROM
            (
            SELECT
                date_format( create_date, '%Y-%c-%d' ) AS post_date
            FROM
                dj_core_house_flow_apply
            WHERE
                house_id = #{houseId}
                AND apply_type in (0,1,2) and worker_type !=3
            GROUP BY
                post_date
            ORDER BY
                create_date DESC
            ) a;
    </select>


    <select id="getHouseProfitList" resultType="com.dangjia.acg.dto.house.DesignDTO">
        SELECT
        house.id AS houseId,
        CONCAT(
        house.residential,
        IFNULL(house.building, '*'),
        '栋',
        IFNULL(CONCAT(house.unit, '单元'),'' ),
        IFNULL(house.number, '*'),
        '号'
        ) houseName,
        house.designer_ok AS designerOk,
        house.residential AS residential,
        house.building AS building,
        house.unit AS unit,
        house.decoration_type AS decorationType,
        house.number AS number,
        house.visit_state AS visitState,
        member.nick_name AS nickName,
        member.NAME AS NAME,
        member.mobile AS mobile,
        house.construction_date AS createDate,
        house.completed_date AS modifyDate
        FROM
        dj_house house
        INNER JOIN dj_member member ON member.id = house.member_id
        WHERE house.data_status=0

        <if test="villageId!=null and villageId!=''">
            AND FIND_IN_SET(house.village_id,#{villageId})
        </if>
        <if test="cityId!=null and cityId!=''">
            AND house.city_id=#{cityId}
        </if>
        <if test="visitState!=null and visitState!=''">
            AND house.visit_state=#{visitState}
        </if>
        <if test="visitState==null or visitState==''">
            AND house.visit_state in (1,3,4)
        </if>
        <if test="searchKey!=null and searchKey!=''">
            AND (CONCAT(
            house.residential,
            IFNULL(house.building, '*'),
            '栋',
            IFNULL(CONCAT(house.unit, '单元'),'' ),
            IFNULL(house.number, '*'),
            '号'
            ) like CONCAT('%',#{searchKey},'%')
            OR member.mobile like CONCAT('%',#{searchKey},'%')
            OR member.name like CONCAT('%',#{searchKey},'%')
            )
        </if>
        ORDER BY house.create_date DESC
    </select>

    <select id="getHouseProfitSummary" resultType="com.dangjia.acg.dto.repair.HouseProfitSummaryDTO">
        SELECT
            number,
            info,
            type,
            money,
            plus,
            date
        FROM
        (
            (
            SELECT
            o.business_order_number number,
            CONCAT(w.`name`, '抢单') info,
            CONCAT('o', o.worker_type) type,
            o.total_price money,
            '0' plus,
            o.`create_date` date
            FROM
            `dj_core_house_worker_order` o
            INNER JOIN dj_core_worker_type w ON o.worker_type_id = w.id
            WHERE
            o.`house_id` = #{houseId}
            AND o.pay_state = 1
            )
        UNION ALL
        (
            SELECT
            number,
            order_name info,
            CONCAT('m', type) type,
            IFNULL(
            actual_total_amount,
            total_amount
            ) money,
            (
            CASE
            WHEN type = 0 THEN
            0
            WHEN type = 1 THEN
            0
            ELSE
            1
            END
            ) AS plus,
            `create_date` date
            FROM
            `dj_repair_mend_order`
            WHERE
            `house_id` = #{houseId}
            AND state = 4 AND type not in(3,4,5)
            )
        UNION ALL
        (
        SELECT
        '-' number,
        NAME info,
        CONCAT('d', state) type,
        money,
        (
        CASE
        WHEN state = 3 THEN
        0
        ELSE
        1
        END
        ) AS plus,
        `create_date` date
        FROM
        `dj_worker_worker_detail`
        WHERE
        `house_id` = #{houseId}
        AND money != 0
        )
        UNION ALL
        (
        SELECT
        number,
        CONCAT('供应商发货结算') info,
        CONCAT('f0') type,
        apply_money money,
        '1' plus,
        `create_date` date
        FROM
        `dj_deliver_split_deliver`
        WHERE
        `house_id` = #{houseId}
        AND `apply_state` = 2 AND `data_status` = 0
        )
        UNION ALL
        (
        SELECT
        number,
        CONCAT('供应商退货结算') info,
        CONCAT('f1') type,
        apply_money money,
        '0' plus,
        `create_date` date
        FROM
        `dj_repair_mend_deliver`
        WHERE
        `house_id` = #{houseId}
        AND `apply_state` = 2 AND `data_status` = 0
        )
        ) a
        ORDER BY
        a.date DESC
    </select>

    <!--根据位置取距离近的参考推荐-->
    <select id="getRecommended" resultType="com.dangjia.acg.modle.house.House">
        SELECT * FROM (SELECT
        <include refid="basic_h_columns"/>
        ,ROUND(
        6378.138 * 2
        * ASIN(
        SQRT(
        POW(
        SIN(
        (
        #{latitude} * PI() / 180 - mv.locationy * PI() / 180
        ) / 2
        )
        ,
        2
        ) + COS(
        #{latitude} * PI() / 180) * COS(mv.locationy * PI() / 180) * POW(
        SIN(
        (
        #{longitude} * PI() / 180 - mv.locationx * PI() / 180
        ) / 2
        ),
        2
        )
        )
        ) * 1000
        ) AS juli
        FROM
        `dj_house_modeling_village` mv ,dj_house h
        inner join
        (SELECT a.house_id,COUNT(a.id) num FROM dj_core_house_flow_apply a GROUP BY a.house_id ) b ON
        b.house_id=h.id/*筛选调无施工记录的房子*/
        WHERE
        mv.id=h.village_id
        AND mv.locationx IS NOT NULL
        AND h.visit_state =3
        AND h.site_display=0
        ORDER BY juli limit 30
        )tab
        order by rand() limit #{limit}
    </select>

    <select id="queryPromotionListHouse" resultType="com.dangjia.acg.modle.house.House">
        select
        <include refid="basic_columns"/>
        from dj_house
        where member_id=#{memberId}
        ORDER BY create_date desc
        limit 1
    </select>


    <select id="getUserList" resultType="com.dangjia.acg.dto.house.UserInfoDateDTO">
        select username,mobile from dj_user where id =
        (select  user_id from dj_member_customer where
        member_id = #{memberId} limit 1)
    </select>

    <select id="getDesignListInfo" resultType="com.dangjia.acg.dto.house.UserInfoDateDTO">
        SELECT
        house.id AS houseId,
        house.designer_ok AS designerOk,
        house.residential AS residential,
        house.building AS building,
        house.unit AS unit,
        house.decoration_type AS decorationType,
        house.number AS number,
        house.member_id as memberId,
        house.create_date as startDate,
        member.nick_name AS nickName,
        member.NAME AS NAME,
        member.mobile AS mobile,
        gr.name as operatorName,
        gr.mobile as operatorMobile,
        gr.id as operatorId
        FROM
        dj_house house
        INNER JOIN dj_member member ON member.id = house.member_id
        INNER JOIN dj_core_house_worker wk ON wk.house_id = house.id
        INNER JOIN dj_member gr ON gr.id = wk.worker_id
        WHERE 1=1 and house.id = #{houseId}
    </select>

    <select id="getModifyDate" resultType="java.util.Date">
        SELECT
            pho.modify_date as modifyDate
        FROM
            dj_pay_business_order pho
        WHERE pho.task_id = #{taskId} AND pay_order_number IS NOT NULL
    </select>


</mapper>

