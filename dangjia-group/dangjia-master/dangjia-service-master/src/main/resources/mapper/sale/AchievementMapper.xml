<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dangjia.acg.mapper.sale.AchievementMapper">


    <!--查询成交量-->
    <select id="queryDealNumber" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        select   COUNT(*)
        from dj_clue c inner join dj_house h
        on c.member_id = h.member_id
        where 1 =1
        and c.cus_service in
        (SELECT su.user_id from dj_store_users su
            where 1=1
            <if test="null != storeId and '' != storeId">
                and su.store_id = #{storeId}
            </if>
        )
        and h.visit_state = 1
        <if test="null != time">
            and date_format(h.modify_date,'%Y-%m') = #{time}
        </if>
    </select>

    <!--查詢全部订单状态，结算累计提成-->
    <select id="queryMeterVisitState" resultType="com.dangjia.acg.dto.sale.achievement.AchievementInfoDTO" parameterType="java.util.HashMap">
        select  c.cus_service userId,
        h.visit_state visitState
        from
        dj_clue c  inner join dj_house h on c.member_id = h.member_id
        where c.cus_service in
        (SELECT su.user_id from dj_store_users su
        where 1=1
            <if test="null != storeId and '' != storeId">
                and su.store_id = #{storeId}
            </if>
        )
        and (h.visit_state = 1 or h.visit_state = 3)
    </select>

    <!--查詢当月订单状态，结算当月提成-->
    <select id="queryVisitState" resultType="com.dangjia.acg.dto.sale.achievement.AchievementInfoDTO" parameterType="java.util.HashMap">
        select  c.cus_service as userId,h.visit_state as visitState
        from
        dj_clue c  inner join dj_house h on c.member_id = h.member_id
        where c.cus_service in
        (SELECT su.user_id from dj_store_users su
            where 1=1
            <if test="null != storeId and '' != storeId">
                and su.store_id = #{storeId}
            </if>
         )
        <if test="null != time">
            and date_format(h.modify_date,'%Y-%m') =#{time}
        </if>
        and (h.visit_state = 1 or h.visit_state = 3)
    </select>

    <!--根据店长查询销 售人员的下单数-->
    <select id="querySingleNumber" resultType="com.dangjia.acg.dto.sale.achievement.AchievementInfoDTO" parameterType="java.util.HashMap">
        select  c.cus_service as userId,count(*) as count,h.visit_state as visitState from
        dj_clue c inner join dj_house h on c.member_id = h.member_id
        where c.cus_service
        in
        (SELECT su.user_id from dj_store_users su
            where 1=1
            <if test="null != storeId and '' != storeId">
                and su.store_id = #{storeId}
            </if>
        )
        and (h.visit_state = 1 or h.visit_state = 3)
        and (h.visit_state = 1 or h.visit_state = 3)  group by cus_service having count>0
    </select>

    <!--查询店长下面员工-->
    <select id="queryUserId" resultType="com.dangjia.acg.dto.sale.achievement.AchievementInfoDTO" parameterType="java.util.HashMap">
        SELECT su.user_id as userId,
        u.username as username,
        smt.target_number as targetNumber
        from dj_store_users su
        inner join dj_user u on su.user_id = u.id
        inner join dj_sale_monthly_target smt on smt.user_id = su.user_id
        where 1=1
        <if test="null != storeId and '' != storeId">
            and su.store_id = #{storeId}
        </if>
    </select>


    <!--查询店长下面员工-->
    <!--<select id="queryUserAchievementData" resultType="com.dangjia.acg.dto.sale.achievement.UserAchievementInfoDTO" parameterType="java.util.HashMap">-->
        <!--select-->
            <!--h.id as id,-->
            <!--h.residential as residential,-->
            <!--h.building as building,-->
            <!--h.unit as unit,-->
            <!--h.number as number,-->
            <!--h.visit_state as visitState,-->
            <!--mc.user_id as userId-->
        <!--from-->
        <!--dj_member_customer mc inner join dj_house h-->
        <!--on mc.member_id = h.member_id-->
        <!--where 1=1-->
        <!--<if test="null != userId and '' != userId">-->
            <!--and mc.user_id = #{userId}-->
        <!--</if>-->
        <!--<if test="null != memberId and '' != memberId">-->
            <!--and h.member_id = #{memberId}-->
        <!--</if>-->
        <!--<if test="null != time">-->
            <!--and date_format(mc.modify_date,'%Y-%m') = #{time}-->
        <!--</if>-->
        <!--<choose>-->
            <!--<when test="visitState != null">-->
                <!--and h.visit_state = #{visitState}-->
            <!--</when>-->
            <!--<otherwise>-->
                <!--and (h.visit_state = 1 or h.visit_state = 3)-->
            <!--</otherwise>-->
        <!--</choose>-->
    <!--</select>-->


    <select id="queryUserAchievementData" resultType="com.dangjia.acg.dto.sale.achievement.UserAchievementInfoDTO" parameterType="java.util.HashMap">
        select
        h.id as id,
        h.residential as residential,
        h.building as building,
        h.unit as unit,
        h.number as number,
        h.visit_state as visitState,
        rm.user_id as userId,
        rm.order_status as orderStatus,
        rm.month_royalty as monthRoyalty,
        rm.meter_royalty as meterRoyalty,
        rm.arr_royalty as arrRoyalty
        from dj_royalty_match rm
        inner join dj_house h
        on rm.house_id=h.id
        where 1=1
        and rm.data_status=0
        <if test="null != userId and '' != userId">
            and rm.user_id = #{userId}
        </if>
        <if test="null != time">
            and date_format(rm.create_date,'%Y-%m') = #{time}
        </if>
        <if test="visitState != null">
            and h.visit_state = #{visitState}
        </if>
        <if test="villageId != null and ''!=villageId and villageId != '1'.toString()">
            and h.village_id=#{villageId}
        </if>
        <if test="building != null and ''!=building">
            and h.building=#{building}
        </if>
        <if test="villageId == '1'.toString()">
            <if test="null!=buildings and buildings.size>0">
                and h.building not in
                <foreach collection="buildings" index="index" item="item" open="(" separator="," close=")">
                    #{item.buildingName}
                </foreach>
            </if>
        </if>
        ORDER BY rm.create_date desc
    </select>



    <!--查询店长下面所有员工提成-->
    <select id="queryRoyaltyMatch" resultType="com.dangjia.acg.dto.sale.achievement.AchievementInfoDTO" parameterType="java.util.HashMap">
        select
        drm.user_id AS userId,
        drm.house_id AS houseId,
        SUM(drm.month_royalty )AS monthRoyalty,
        SUM(drm.month_royalty )AS meterRoyalty,
        SUM(drm.count_arr_royalty )AS arrRoyalty,
        count(drm.id) as singleNumber,
        u.username as username,
        smt.target_number as targetNumber,
        drm.data_status as dataStatus
        from
        dj_royalty_match drm
        INNER JOIN dj_user u on drm.user_id = u.id
        LEFT JOIN dj_sale_monthly_target smt on drm.user_id = smt.user_Id
        and date_format(smt.target_date,'%Y-%m') =  date_format(drm.modify_date,'%Y-%m')
        where drm.user_id in
        (SELECT su.user_id from dj_store_users su
        where 1=1
            and su.store_id = #{storeId}
        )
        and date_format(drm.modify_date,'%Y-%m') = #{time}
        GROUP BY drm.user_id
    </select>


    <!--查询店长下面所有员工提成-->
    <select id="queryMonthRoyalty" resultType="com.dangjia.acg.dto.sale.achievement.AchievementInfoDTO" parameterType="java.util.HashMap">
        select
        drm.user_id AS userId,
        drm.house_id AS houseId,
        SUM(drm.month_royalty )AS monthRoyalty,
        SUM(drm.month_royalty )AS meterRoyalty,
        SUM(drm.count_arr_royalty )AS arrRoyalty,
        count(drm.id) as singleNumber,
        u.username as username,
        smt.target_number as targetNumber
        from
        dj_royalty_match drm
        INNER JOIN dj_user u on drm.user_id = u.id
        LEFT JOIN dj_sale_monthly_target smt on drm.user_id = smt.user_Id
        and date_format(smt.target_date,'%Y-%m') =  date_format(drm.modify_date,'%Y-%m')
        where drm.user_id in
        (SELECT su.user_id from dj_store_users su
        where 1=1
            and su.store_id = #{storeId}
        )
        and date_format(drm.modify_date,'%Y-%m') = #{time}
        and drm.data_status=0
        GROUP BY drm.user_id union
        select
        drm.user_id AS userId,
        drm.house_id AS houseId,
        SUM(drm.month_royalty )AS monthRoyalty,
        SUM(drm.month_royalty )AS meterRoyalty,
        SUM(drm.count_arr_royalty )AS arrRoyalty,
        count(drm.id) as singleNumber,
        u.username as username,
        smt.target_number as targetNumber
        from
        dj_royalty_match drm
        INNER JOIN dj_user u on drm.user_id = u.id
        LEFT JOIN dj_sale_monthly_target smt on drm.user_id = smt.user_Id
        and date_format(smt.target_date,'%Y-%m') =  date_format(drm.modify_date,'%Y-%m')
        where drm.user_id in
        (SELECT su.user_id from dj_store_users su
        where 1=1
            and su.store_id = #{storeId}
        )
        and date_format(drm.modify_date,'%Y-%m') = #{time}
        and drm.data_status=1
        GROUP BY drm.user_id
    </select>


    <select id="Complete" resultType="java.lang.Integer">
        SELECT
            count(0)
        FROM
            dj_royalty_match rm
        INNER JOIN dj_house h
        ON rm.house_id = h.id
        WHERE
            user_id =#{userId}
        AND order_status = 0
        AND date_format(rm.create_date,'%Y-%m')=#{time}
        <if test="building != null and ''!=building">
            and h.building=#{building}
        </if>
        <if test="villageId != null and ''!=villageId and villageId != '1'.toString()">
            and h.village_id=#{villageId}
        </if>
        <if test="visitState != null and ''!=visitState">
            and h.visit_state = #{visitState}
        </if>
        <if test="villageId == '1'.toString()">
            <if test="null!=buildings and buildings.size>0">
                and h.building not in
                <foreach collection="buildings" index="index" item="item" open="(" separator="," close=")">
                    #{item.buildingName}
                </foreach>
            </if>
        </if>
    </select>


    <select id="queryVolumeDTO" resultType="com.dangjia.acg.dto.sale.achievement.UserAchievementInfoDTO" parameterType="java.util.HashMap">
        SELECT
            h.id,
            CONCAT(
                IFNULL(h.residential, '*'),
                IFNULL(CONCAT(h.building, '栋'),'*栋'),
                IFNULL(CONCAT(h.unit, '单元'),'*单元'),
                IFNULL(CONCAT(h.number, '号'),'*号')
            ) AS wholeHouse,
            h.visit_state as visitState
        FROM
            dj_royalty_match rm
        INNER JOIN dj_house h ON rm.house_id = h.id
        where 1=1
        and rm.order_status=0
        <if test="null != userId and '' != userId">
            and rm.user_id = #{userId}
        </if>
        <if test="null != time">
            and date_format(rm.create_date,'%Y-%m') = #{time}
        </if>
        <if test="visitState != null">
            and h.visit_state = #{visitState}
        </if>
        <if test="building != null and ''!=building">
            and h.building=#{building}
        </if>
        <if test="villageId != null and ''!=villageId and villageId != '1'.toString()">
            and h.village_id=#{villageId}
        </if>
        <if test="villageId == '1'.toString()">
            <if test="null!=buildings and buildings.size>0">
                and CONCAT(h.residential,h.building) not in
                <foreach collection="buildings" index="index" item="item" open="(" separator="," close=")">
                    #{item.vbName}
                </foreach>
            </if>
        </if>
        ORDER BY h.modify_date desc
    </select>

</mapper>