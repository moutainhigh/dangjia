<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dangjia.acg.mapper.worker.IWorkerDetailMapper">

<sql id="new_columns">
    id,
    name,
    worker_id as workerId,
    worker_name as workerName,
    house_id as houseId,
    money,
    state,
    defined_worker_id as definedWorkerId,
    defined_name as definedName,
    have_money as haveMoney,
    house_worker_order_id as houseWorkerOrderId,
    apply_money as applyMoney,
    wallet_money as walletMoney,
    create_date as createDate,
    modify_date as modifyDate
</sql>

    <!--统计总收入钱 -->
    <select id="incomeMoney" resultType="java.lang.Double">
        select IFNULL(sum(money),0)
        from dj_worker_worker_detail
        where worker_id=#{workerId}
        <if test="null!=states and states.length > 0">
        AND state IN
            <foreach collection="states" item="item" index="index"
                     separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="time!=null and time!=''">
            AND create_date &lt;= #{time}
        </if>
        AND  state not in (1,3,7,11,13)
    </select>

    <!--收入 -->
    <select id="incomeDetail" resultType="com.dangjia.acg.modle.worker.WorkerDetail">
        select
            <include refid="new_columns" />
        from dj_worker_worker_detail
        where worker_id=#{workerId}
        and  state not in (1,3,7,11,13)

    </select>

    <!--&lt;!&ndash;所有订单流水 &ndash;&gt;-->
    <!--<select id="getAllWallet" resultType="com.dangjia.acg.modle.worker.WorkerDetail">-->
        <!--select-->
        <!--<include refid="new_columns" />-->
        <!--from dj_worker_worker_detail-->
        <!--where 1=1-->
        <!--<if test="workerId!=null and workerId!=''">-->
            <!--and worker_id=#{workerId}-->
        <!--</if>-->
        <!--<if test="houseId!=null and houseId!=''">-->
            <!--and house_id=#{houseId}-->
        <!--</if>-->
        <!--ORDER BY create_date DESC-->
    <!--</select>-->
    <!--所有订单流水 -->
    <select id="getAllWallet" resultType="com.dangjia.acg.modle.worker.WorkerDetail">
        select
        wwd.id,
        wwd.name,
        wwd.worker_id as workerId,
        wwd.worker_name as workerName,
        wwd.house_id as houseId,
        wwd.money,
        wwd.state,
        wwd.defined_worker_id as definedWorkerId,
        wwd.defined_name as definedName,
        wwd.have_money as haveMoney,
        wwd.house_worker_order_id as houseWorkerOrderId,
        wwd.apply_money as applyMoney,
        wwd.wallet_money as walletMoney,
        wwd.create_date as createDate,
        wwd.modify_date as modifyDate,

        house.id,
        house.residential,
        house.building,
        house.unit,
        house.number,
        house.member_id,
        member.mobile
        FROM dj_worker_worker_detail as wwd
        INNER JOIN dj_member AS member ON member.id = wwd.worker_id
        LEFT  JOIN dj_house as house on (wwd.house_id = house.id  )
        where 1=1
        <if test="workerId!=null and workerId!=''">
            and wwd.worker_id=#{workerId}
        </if>
        <if test="houseId!=null and houseId!=''">
            and wwd.house_id=#{houseId}
        </if>
        <if test="likeAddress!=null and likeAddress!=''">
            AND wwd.house_id = house.id
            AND CONCAT(
            house.residential,
            IFNULL(house.building, '*'),
            '栋',
            IFNULL(CONCAT(house.unit, '单元'),'' ),
            IFNULL(house.number, '*'),
            '号'
            )  LIKE CONCAT('%',#{likeAddress},'%')

        </if>
        <if test="likeMobile!=null and likeMobile!=''">
            AND (
            member.mobile LIKE CONCAT('%',#{likeMobile},'%')
            OR
            member.name LIKE CONCAT('%',#{likeMobile},'%')
            OR
            wwd.worker_name LIKE CONCAT('%',#{likeMobile},'%')
            )
        </if>
        ORDER BY wwd.create_date desc
    </select>

    <!--统计总支出钱 -->
    <select id="outMoney" resultType="java.lang.Double">
        select IFNULL(sum(money),0)
        from dj_worker_worker_detail
        where worker_id=#{workerId}
        <if test="null!=states and states.length > 0">
          AND state IN
            <foreach collection="states" item="item" index="index"
                     separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="time!=null and time!=''">
            AND create_date &lt;= #{time}
        </if>
        and  state in (1,3,7,11,13)
    </select>
    <!--支出 -->
    <select id="outDetail" resultType="com.dangjia.acg.modle.worker.WorkerDetail">
        select
            <include refid="new_columns" />
        from dj_worker_worker_detail
        where worker_id=#{workerId}
        and  state in (1,3,7,11,13)
        ORDER BY create_date DESC
    </select>


    <!--查询有记录的历史月 -->
    <select id="getHistoryMonth" resultType="java.util.Map">
        select
           DATE_FORMAT(d.create_date, '%m月') month,
           sum(money) money
        from
			dj_worker_worker_detail as d
		where d.worker_id=#{workerId}
        and  d.state not in (1,3,7,11,13)
		and  DATE_FORMAT(d.create_date, '%Y') =#{time}
		GROUP BY month
		ORDER BY d.create_date
    </select>
    <!--根据年月查询对应历史月流水 -->
    <select id="getHistoryMonthByWorkerId" resultType="com.dangjia.acg.modle.worker.WorkerDetail">
        select
            <include refid="new_columns" />
        from dj_worker_worker_detail
        where worker_id=#{workerId}
		and date_format(create_date, '%Y-%m') = #{createDate}
		ORDER BY create_date DESC
    </select>

    <select id="getHouseWallet" resultType="com.dangjia.acg.dto.finance.WebWorkerDetailDTO">
        SELECT
            a.apply_type state,
            a.NAME,
            a.create_date createDate,
            a.apply_money money,
            a.star
        FROM
            (
        <if test="workerType == 3">


                (
                    SELECT
                        '3' apply_type,
                        '巡查工地收入' NAME,
                        a.create_date,
                        a.supervisor_money apply_money,
                        IFNULL(avg(e.star), 0) star
                    FROM
                        `dj_core_house_flow_apply` a
                    LEFT JOIN dj_worker_evaluate e ON a.id = e.house_flow_apply_id  AND e.butler_id=#{workerId}
                    AND e.state = 1
                    WHERE
                        a.`house_id` = #{houseId} -- 仅限大管家
                    AND a.member_check  in(1,3)
                    AND a.supervisor_money > 0
                    AND a.apply_type IN (5,6,7)
                    GROUP BY
                        a.id
                )
                UNION ALL
                    (
                        SELECT
                            '4' apply_type,
                            (
                                CASE
                                WHEN a.apply_type = 1 THEN
                                    '阶段完工验收'
                                WHEN a.apply_type = 2 THEN
                                    '整体完工验收'
                                END
                            ) NAME,
                            a.create_date,
                            a.supervisor_money apply_money,
                            IFNULL(avg(e.star), 0) star
                        FROM
                            `dj_core_house_flow_apply` a
                        LEFT JOIN dj_worker_evaluate e ON a.id = e.house_flow_apply_id AND e.butler_id=#{workerId}
                        AND e.state = 1
                        WHERE
                            a.`house_id` = #{houseId} -- 仅限大管家
                        AND a.member_check  in(1,3)
                        AND a.supervisor_money > 0
                        AND a.apply_type IN (1, 2)
                        GROUP BY
                            a.id
                    )
                UNION ALL
        </if>
                (
                    SELECT
                        '13' apply_type,
                        '提前结束装修' NAME,
                        a.create_date,
                        a.apply_money,
                        0 star
                    FROM
                       `dj_core_house_flow_apply` a
                    WHERE
                    a.`house_id` = #{houseId}   AND a.worker_id=#{workerId}
                        AND a.member_check  in(1,3)
                        AND a.apply_money > 0
                        AND a.apply_type = 8
                        GROUP BY
                        a.id
                )
                UNION ALL
                (
                    SELECT
                     '5' apply_type,
                    '整体竣工' NAME,
                    a.create_date,
                    a.apply_money,
                    IFNULL(avg(e.star), 0) star
                    FROM
                    `dj_core_house_flow_apply` a
                    LEFT JOIN dj_worker_evaluate e ON a.id = e.house_flow_apply_id
                    AND e.state = 1
                    WHERE
                    a.`house_id` = #{houseId}   and a.worker_id=#{workerId}
                    AND a.member_check in(1,3)
                    AND a.apply_money > 0
                    AND a.worker_type  = 3
                    AND a.apply_type = 2
                    GROUP BY
                    a.id
                )
                UNION ALL
                    (
                        SELECT
                            a.apply_type,
                            (
                                CASE
                                WHEN a.apply_type = 0 THEN
                                    '每日完工收入'
                                WHEN a.apply_type = 1 THEN
                                    '阶段完工收入'
                                WHEN a.apply_type = 2 THEN
                                    '整体完工收入'
                                END
                            ) NAME,
                            a.create_date,
                            a.apply_money,
                            IFNULL(avg(e.star), 0) star
                        FROM
                            `dj_core_house_flow_apply` a
                        LEFT JOIN dj_worker_evaluate e ON a.id = e.house_flow_apply_id
                        AND e.state = 1
                        WHERE
                            a.`house_id` = #{houseId}   and a.worker_id=#{workerId}
                        AND a.member_check in(1,3)
                        AND a.apply_money > 0
                        AND a.worker_type != 3
                        AND a.apply_type IN (0,1, 2)
                        GROUP BY
                            a.id
                    )
                UNION ALL
                    (
                        SELECT
                            (
                                CASE
                                WHEN a.type = 1 THEN
                                    8
                                WHEN a.type != 1 THEN
                                    9
                                END
                            ) apply_type,
                            (
                                CASE
                                WHEN a.type = 1 THEN
                                    '补人工收入'
                                WHEN a.type != 1 THEN
                                    '退人工支出'
                                END
                            ) NAME,
                            a.create_date,
                            a.total_amount apply_money,
                            0 star
                        FROM
                            dj_repair_mend_order a
                        INNER JOIN dj_core_house_flow f ON f.house_id = a.house_id
                        AND f.worker_type_id = a.worker_type_id
                        WHERE
                          a.`house_id` = #{houseId}   and f.worker_id=#{workerId}
                        AND a.type IN (1, 3)
                        AND a.state IN (3, 4)
                    )
                UNION ALL
                    (
                        SELECT
                            (
                                CASE
                                WHEN c.type = 1 THEN
                                    11
                                WHEN c.type != 1 THEN
                                    10
                                END
                            ) apply_type,
                            (
                                CASE
                                WHEN c.type = 1 THEN
                                    '处罚支出'
                                WHEN c.type != 1 THEN
                                    '奖励收入'
                                END
                            ) NAME,
                            a.create_date,
                            pc.quantity apply_money,
                            0 star
                        FROM
                            dj_worker_reward_punish_record a
                        INNER JOIN dj_worker_reward_punish_correlation c ON a.reward_punish_correlation_id = c.id
                        INNER JOIN dj_worker_reward_punish_condition pc ON pc.reward_punish_correlation_id = c.id
                        WHERE
                         a.`house_id` = #{houseId} AND a.member_id=#{workerId}
                        AND pc.type IN (1, 2)
                        AND a.state = 0
                    )
            ) a
        ORDER BY
            a.create_date DESC
    </select>
</mapper>

