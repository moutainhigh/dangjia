<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dangjia.acg.mapper.core.IHouseFlowMapper">
    <sql id="new_columns_teb">
            f.id,
            f.city_id as cityId,
            f.house_id as houseId,
            f.sort,
            f.state,
            f.worker_type_id as workerTypeId,
            f.worker_type as workerType,
            f.work_type as workType,
            f.material_price as materialPrice,
            f.total_price as totalPrice,
            f.work_steta as workSteta,
            f.grab_number as grabNumber,
            f.refuse_number as refuseNumber,
            f.end_date as endDate,
            f.start_date as startDate,
            f.grab_lock as grabLock,
            f.nominator,
            f.work_price as workPrice,
            f.worker_id as workerId,
            f.pause,
            f.self_price as selfPrice,
            f.release_time as releaseTime,
            f.check_money as checkMoney,
            f.patrol,
            f.patrol_money as patrolMoney,
            f.scan_code as scanCode,
            f.supervisor_start as supervisorStart,
            f.past,
            f.latitude,
            f.longitude,
            f.data_status as dataStatus,
            f.create_date as createDate,
            f.modify_date as modifyDate
    </sql>
    <sql id="new_columns">
            id,
            city_id as cityId,
            house_id as houseId,
            sort,
            state,
            worker_type_id as workerTypeId,
            worker_type as workerType,
            work_type as workType,
            material_price as materialPrice,
            total_price as totalPrice,
            work_steta as workSteta,
            grab_number as grabNumber,
            refuse_number as refuseNumber,
            end_date as endDate,
            start_date as startDate,
            grab_lock as grabLock,
            nominator,
            work_price as workPrice,
            worker_id as workerId,
            pause,
            self_price as selfPrice,
            release_time as releaseTime,
            check_money as checkMoney,
            patrol,
            patrol_money as patrolMoney,
            scan_code as scanCode,
            supervisor_start as supervisorStart,
            past,
            latitude,
            longitude,
            data_status as dataStatus,
            create_date as createDate,
            modify_date as modifyDate
    </sql>

    <sql id="member_all_columns">
               m.id,
               m.user_name AS userName,
               m.password,
               m.nick_name AS nickName,
               m.name,
               m.mobile,
               m.qrcode,
               m.superiorId,
               m.invite_num AS inviteNum,
               m.gift,
               m.invitation_code AS invitationCode,
               m.others_invitation_code AS othersInvitationCode,
               m.head,
               m.idcaoda,
               m.idcaodb,
               m.idcaodall,
               m.worker_type AS workerType,
               m.worker_type_id AS workerTypeId,
               m.idnumber,
               m.worker_price AS workerPrice,
               m.have_money AS haveMoney,
               m.surplus_money AS surplusMoney,
               m.retention_money AS retentionMoney,
               m.deposit as deposit,
               m.check_type AS checkType,
               m.praise_rate AS praiseRate,
               m.volume as volume,
               m.evaluation_score AS evaluationScore,
               m.is_crowned AS isCrowned,
               m.smscode as smscode,
               m.paycode as paycode,
               m.referrals as referrals,
               m.remarks as remarks,
               m.real_name_state as realNameState,
               m.real_name_describe as realNameDescribe,
               m.check_describe as checkDescribe,
               m.create_date AS createDate,
               m.data_status AS dataStatus,
               m.modify_date AS modifyDate
    </sql>

    <!--根据houseId和工种类型id-->
    <select id="getByWorkerTypeId" resultType="com.dangjia.acg.modle.core.HouseFlow">
        select
        <include refid="new_columns" />
        from dj_core_house_flow
        where  house_id=#{houseId}
        and worker_type_id =#{workerTypeId}
    </select>

    <!--根据houseId查询已进场未完工工序-->
    <select id="unfinishedFlow" parameterType="java.lang.String" resultType="com.dangjia.acg.modle.core.HouseFlow">
        select
        <include refid="new_columns_teb" />
        FROM
        dj_core_house_flow f
        INNER JOIN dj_house h ON h.id = f.house_id
        WHERE
        f.state = 0
        AND f.pause = 0
        AND f.work_type = 4
        AND f.work_steta != 2
        AND f.worker_type > 3
        AND h.visit_state = 1
        AND (
        SELECT
        GROUP_CONCAT(fa.id)
        FROM
        dj_core_house_flow_apply fa
        WHERE
        fa.house_flow_id = f.id
        AND fa.apply_type = 4
        AND to_days(fa.create_date) = to_days(NOW())
        ) IS NULL
        <if test="houseId!=null">
            AND f.house_id=#{houseId}
        </if>
        order by f.sort asc
    </select>

    <!--根据houseId查询所有用工序 -->
    <select id="getAllFlowByHouseId" parameterType="java.lang.String" resultType="com.dangjia.acg.modle.core.HouseFlow">
       select
        <include refid="new_columns" />
       from dj_core_house_flow
       where house_id=#{houseId}
	   and state=0
	   order by sort asc
    </select>

    <!--其它工人整体完工申请 检测还有没有其它整体完工的申请 -->
    <select id="checkAllFinish" parameterType="java.lang.String" resultType="com.dangjia.acg.modle.core.HouseFlow">
        select
        <include refid="new_columns" />
        from dj_core_house_flow
        where house_id=#{houseId}
        and state=0
        and work_steta !=2
        and worker_type &gt; 3
        and id != #{houseFlowId}
    </select>

    <!--根据houseId查询是否此房子是否开工 -->
    <select id="getHouseIsStart" parameterType="java.lang.String" resultType="com.dangjia.acg.modle.core.HouseFlow">
        select
        <include refid="new_columns" />
        from dj_core_house_flow
        where house_id=#{houseId}
        and worker_type not in(1,2,3)
        and work_type in(2,4)
    </select>
    <!--根据houseId和工种类型查询HouseFlow -->
    <select id="getHouseFlowByHidAndWty" resultType="com.dangjia.acg.modle.core.HouseFlow">
        select
        <include refid="new_columns" />
        from dj_core_house_flow
        where  house_id=#{houseId}
        and worker_type =#{workerType}
    </select>
    <!--找出启用工种 给大管家算审核钱 -->
    <select id="getForCheckMoney" resultType="com.dangjia.acg.modle.core.HouseFlow">
        select
        <include refid="new_columns" />
        from dj_core_house_flow
        where house_id=#{houseId}
        and state = 0
        and worker_type &gt; 3
        order by sort asc
    </select>
    <select id="getHouseScheduleFlow" resultType="com.dangjia.acg.dto.core.HouseFlowDTO">
        select
            f.id,
            f.city_id as cityId,
            f.house_id as houseId,
            f.sort,
            f.state,
            f.worker_type_id as workerTypeId,
            wt.`name`  as workerTypeName,
            f.worker_type as workerType,
            f.work_type as workType,
            f.total_price as totalPrice,
            f.work_steta as workSteta,
            f.end_date as endDate,
            f.start_date as startDate,
            f.work_price as workPrice,
            f.worker_id as workerId,
            f.data_status as dataStatus,
            f.create_date as createDate,
            f.modify_date as modifyDate
            FROM
                dj_core_house_flow f
            INNER JOIN dj_core_worker_type wt on wt.id=f.worker_type_id
            WHERE
                f.house_id =#{houseId}
            AND f.state = 0
            AND f.worker_type > 3
            ORDER BY
                f.sort ASC

    </select>
    <!--根据当前工序查下一工序-->
    <select id="getNextHouseFlow" resultType="com.dangjia.acg.modle.core.HouseFlow">
        select
        <include refid="new_columns" />
        from dj_core_house_flow
        where  house_id=#{houseId}
        AND work_type = 1 and state=0
        ORDER BY sort ASC
        LIMIT 1
    </select>


    <!--设计精算管家外可用工序-->
    <select id="getWorkerFlow" resultType="com.dangjia.acg.modle.core.HouseFlow">
        select
            <include refid="new_columns" />
        from dj_core_house_flow
        where house_id = #{houseId}
        and state=0
        and worker_type not in (1,2,3)
        order by sort asc
    </select>
</mapper>

