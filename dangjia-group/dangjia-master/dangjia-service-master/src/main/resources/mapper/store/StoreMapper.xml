<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dangjia.acg.mapper.store.IStoreMapper">

    <sql id="all_columns">
	      id,
          create_date AS createDate,
          user_id AS userId,
          modify_date AS modifyDate,
          data_status AS dataStatus,
          store_name AS storeName,
          city_id AS cityId,
          city_name AS cityName,
          department_id AS departmentId,
          department_name AS departmentName,
          store_address AS storeAddress,
          reservation_number AS reservationNumber,
          latitude,
          longitude,
          scope_itude AS scopeItude,
          villages
	</sql>

    <!--查询门店-->
    <select id="queryStore" resultType="com.dangjia.acg.modle.store.Store">
        SELECT
        <include refid="all_columns"/>
        FROM dj_store
        where data_status =0
        <if test="null!=cityId and ''!=cityId">
            AND city_id=#{cityId}
        </if>
        <if test="null!=storeName and ''!=storeName">
            AND store_name LIKE CONCAT('%',#{storeName},'%')
        </if>
        ORDER BY create_date DESC
    </select>


    <!--查询门店(按距离)-->
    <select id="queryStoreDistance" resultType="com.dangjia.acg.modle.store.Store">
        SELECT
        <include refid="all_columns"/>,
        ROUND(
            6378.138 * 2 * ASIN(
            SQRT(
                POW(
                    SIN(
                        (
                        28.189381 * PI() / 180 - latitude * PI() / 180
                        ) / 2
                        ),
                        2
                        ) + COS(28.189381 * PI() / 180) * COS(latitude * PI() / 180) * POW(
                        SIN(
                        (
                        112.841035 * PI() / 180 - longitude * PI() / 180
                        ) / 2
                        ),
                        2
                    )
                )
            ) * 1000
        ) AS juli
        FROM dj_store
        where data_status =0
        <if test="null!=cityId and ''!=cityId">
            AND city_id=#{cityId}
        </if>
        <if test="null!=storeName and ''!=storeName">
            AND store_name=#{store_name}
        </if>
        ORDER BY
        juli
    </select>

    <!--首页门店-->
    <select id="indexqueryStore" resultType="com.dangjia.acg.modle.store.Store">
        SELECT
        <include refid="all_columns"/>,
        ROUND(
            6378.138 * 2 * ASIN(
            SQRT(
            POW(
            SIN(
            (
            #{latitude} * PI() / 180 - latitude * PI() / 180
            ) / 2
            ),
            2
            ) + COS(
            #{latitude} * PI() / 180) * COS(latitude * PI() / 180) * POW(
            SIN(
            (
            #{longitude} * PI() / 180 - longitude * PI() / 180
            ) / 2
            ),
            2
            )
            )
            ) * 1000
        ) AS juli
        FROM dj_store
        where data_status =0
        AND city_id=#{cityId}
        ORDER BY
        juli limit 1
    </select>



    <select id="getOrderStore" resultType="com.dangjia.acg.dto.sale.store.OrderStoreDTO">
        SELECT
          id AS storeId,
          create_date AS createDate,
          user_id AS userId,
          modify_date AS modifyDate,
          data_status AS dataStatus,
          store_name AS storeName,
          city_id AS cityId,
          city_name AS cityName,
          department_id AS departmentId,
          department_name AS departmentName,
          store_address AS storeAddress,
          reservation_number AS reservationNumber,
          latitude,
          longitude,
          scope_itude AS scopeItude,
          villages,
        ROUND(
        6378.138 * 2 * ASIN(
        SQRT(
        POW(
        SIN(
        (
        #{latitude} * PI() / 180 - latitude * PI() / 180
        ) / 2
        ),
        2
        ) + COS(
        #{latitude} * PI() / 180) * COS(latitude * PI() / 180) * POW(
        SIN(
        (
        #{longitude} * PI() / 180 - longitude * PI() / 180
        ) / 2
        ),
        2
        )
        )
        ) * 1000
        ) AS juli
        FROM dj_store
        where data_status =0
        <if test="null!=djOrderSurfaces and djOrderSurfaces.size>0">
            and id not in
            <foreach collection="djOrderSurfaces" index="index" item="item" open="(" separator="," close=")">
                #{item.storeId}
            </foreach>
        </if>
        ORDER BY
        juli
    </select>
</mapper>