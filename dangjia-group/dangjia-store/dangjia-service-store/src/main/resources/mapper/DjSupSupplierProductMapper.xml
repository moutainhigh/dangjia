<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dangjia.acg.mapper.supplier.DjSupSupplierProductMapper">

    <select id="querySupplierGoods" resultType="com.dangjia.acg.dto.supplier.DjSupSupplierProductDTO">
        SELECT
            ssp.goods_id AS goodsId,
	        ssp.product_id AS productId,
            bg.name AS goodsName,
            bpt.name AS productName,
            bpt.image,
            bg.attribute_id_arr AS attributeIdArr,
            ssp.price,
            ssp.stock,
            bpt.price AS salesPrice,
            bpt.cartage_price AS cartagePrice,
            bg.is_elevator_fee AS isElevatorFee
        FROM
            dj_sup_supplier_product ssp
        INNER JOIN dj_basics_goods bg ON ssp.goods_id = bg.id
        INNER JOIN dj_basics_product_template bpt ON ssp.product_id = bpt.id
        WHERE 1=1   and ssp.data_status=0 and ssp.supplier_id=#{supId}
    </select>

    <select id="queryHaveGoods" resultType="com.dangjia.acg.dto.supplier.DjSupSupplierProductDTO">
        SELECT
            sap.id,
            sap.goods_id AS goodsId,
            sap.product_id AS productId,
            bg. NAME AS goodsName,
            IFNULL(bsp.market_name,bpt. NAME) AS productName,
            bsp.image,
            bg.attribute_id_arr AS attributeIdArr,
            bpt.value_name_arr AS valueNameArr,
            bpt.value_id_arr AS valueIdArr,
            sap.price,
            sap.stock,
            bsp.sell_price AS salesPrice,
            bpt.cartage_price AS cartagePrice,
            sap.is_cartage_price AS isCartagePrice,
            sap.supply_relationship AS supplyRelationship,
            if(ar.adjust_time is not null and ar.adjust_time!="",ar.adjust_time,current_timestamp()) as adjustTime,
            if(ar.adjust_price is not null and ar.adjust_price!="",ar.adjust_price,0) as adjustprice,
            if(sap.porterage is not null and sap.porterage!="",sap.porterage,0) as porterage
        FROM
            dj_sup_application_product sap
        INNER JOIN dj_basics_goods bg ON sap.goods_id = bg.id
        INNER JOIN dj_basics_storefront_product bsp ON bsp.id = sap.product_id
        INNER JOIN dj_basics_product_template bpt ON bsp.prod_template_id = bpt.id
        LEFT JOIN (SELECT * FROM (select * from dj_adjust_record  order by create_date DESC) b GROUP BY b.application_product_id) ar ON ar.application_product_id=sap.id
        WHERE 1=1
            and  sap.sup_id = #{supId}
            and sap.data_status=0
            and sap.shop_id = #{shopId}
            <if test="null!=keyWord and ''!=keyWord">
                and (
                bg.NAME LIKE CONCAT('%',#{keyWord},'%') or
                bpt.name LIKE CONCAT('%',#{keyWord},'%') or
                bsp.market_name LIKE CONCAT('%',#{keyWord},'%')
                )
            </if>
            <choose>
                <when test='applicationStatus.contains(",")'>
                    and sap.application_status in(${applicationStatus})
                </when>
                <otherwise>
                    and sap.application_status=#{applicationStatus}
                </otherwise>
            </choose>
    </select>


    <select id="queryAttributeNameByIds" resultType="java.lang.String">
        select
        GROUP_CONCAT(name SEPARATOR 'ï¼Œ')
        AND p.id in
        <foreach collection="ids" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="queryDjSupSupplierProductList" resultType="com.dangjia.acg.dto.delivery.SupplyDimensionDTO">
        SELECT
        bpt.image,
        bpt.name as productName,
        bpt.product_sn as productSn,
        sap.stock,
        sap.price,
        sap.sup_id as supId,
        sap.product_id as productId
        FROM
        dj_sup_application_product sap
        INNER JOIN dj_basics_product_template bpt ON sap.product_id=bpt.id
        WHERE 1=1 and sap.data_status=0
        and sap.sup_id =#{supId}
        and sap.application_status =1
        <if test="null!=searchKey and ''!=searchKey">
            AND (
            bpt.name LIKE CONCAT('%',#{searchKey},'%') or
            bpt.product_sn LIKE CONCAT('%',#{searchKey},'%')
            )
        </if>
    </select>

    <select id="queryNotForTheGoods" resultType="com.dangjia.acg.dto.supplier.DjSupSupplierProductDTO">
        SELECT
            bsp.id AS productId,
            bsp.goods_id AS goodsId,
            bsp.prod_template_id AS prodTemplateId,
            bg.NAME AS goodsName,
            bsp.product_name AS productName,
            bsp.image,
            bg.attribute_id_arr AS attributeIdArr,
            bpt.value_name_arr AS valueNameArr,
            bpt.value_id_arr AS valueIdArr,
            bsp.sell_price AS salesPrice,
            bsp.supplied_num AS stock,
            bpt.price AS price,
            bpt.cartage_price AS cartagePrice,
            bg.is_elevator_fee AS isCartagePrice
        FROM
            dj_basics_storefront_product bsp
        INNER JOIN dj_basics_goods bg ON bsp.goods_id = bg.id
        INNER JOIN dj_basics_product_template bpt ON bsp.prod_template_id = bpt.id
        WHERE 1 = 1
        AND bsp.data_status = 0
        AND bsp.is_shelf_status=1
        <if test="null!=shopId and ''!=shopId">
            and bsp.storefront_id = #{shopId}
        </if>
        <if test="null!=productIds and productIds.size>0">
            and bsp.id not in
            <foreach collection="productIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

</mapper>