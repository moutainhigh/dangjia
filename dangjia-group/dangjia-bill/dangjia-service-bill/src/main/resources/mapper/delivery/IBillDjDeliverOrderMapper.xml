<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dangjia.acg.mapper.delivery.IBillDjDeliverOrderMapper">


    <select id="queryApplyDec" resultType="com.dangjia.acg.dto.delivery.HouseFlowDataDTO">
        select apply_dec as applyDec,create_date AS createDate
        from dj_core_house_flow_apply
        order by create_date DESC limit 4
    </select>

    <select id="queryApplyPayState" resultType="com.dangjia.acg.dto.delivery.HouseFlowDataDTO">
        select apply_dec as applyDec,create_date AS createDate
        from dj_core_house_flow_apply WHERE is_read_type = 0 and house_id = #{houseId}
    </select>

    <select id="queryDjDeliverOrderStorefront" resultType="com.dangjia.acg.dto.delivery.OrderStorefrontDTO">
        SELECT
            t1.storefont_id storefrontId,
            t1.id orderId,
            t1.address_id addressId,
            t1.house_id houseId,
            t1.business_order_number businessOrderNumber,
            t1.order_number orderNumber,
            t4.storefront_name storefrontName
        FROM
            dj_deliver_order t1,
            dj_pay_business_order t3,
            dj_basics_storefront t4
        WHERE
            t1.business_order_number = t3.number
        AND t1.storefont_id = t4.id
        AND t1.payment IS NOT NULL
        AND t3.state = 3
        AND t1.house_id = #{houseId}
        AND EXISTS (
            SELECT
                1
            FROM
                dj_deliver_order_item t2
            WHERE
                t1.id = t2.order_id
            AND t2.shop_count > (
                IFNULL(t2.ask_count, 0) + IFNULL(t2.return_count, 0)
            )
            AND t2.data_status = 0
            AND t2.is_reservation_deliver=1
            AND (t2.reservation_deliver_time IS NULL OR t2.reservation_deliver_time='')
        )
    </select>


    <select id="queryAppointment" resultType="com.dangjia.acg.dto.delivery.AppointmentDTO">
        SELECT
            t.product_id productId,
            t.id orderItemId,
            t.storefont_id storefrontId,
            t.product_name productName,
            t.product_sn productSn,
            t.product_type productType,
            t.price price,
            IFNULL(t.image,t1.image) image,
            t.shop_count shopCount,
            IFNULL(t.ask_count,0) askCount,
            IFNULL(t.return_count,0) returnCount,
            (t.shop_count - (IFNULL(t.ask_count, 0)+IFNULL(t.return_count,0))) surplusCount,
            t1.prod_template_id productTemplateId,
            t.reservation_deliver_time as reservationDeliverTime
        FROM
            dj_deliver_order_item t,
            dj_basics_storefront_product t1
        WHERE t.product_id =t1.id
        AND t.order_id =  #{orderId}
        AND t.shop_count > (IFNULL(t.ask_count, 0)+IFNULL(t.return_count,0))
        AND t.data_status = 0
    </select>


    <select id="queryReservedStorefront" resultType="com.dangjia.acg.dto.delivery.OrderStorefrontDTO">
        SELECT
            t1.storefront_id storefrontId,
            t1.id orderSplitId,
            t1.address_id addressId,
            t1.house_id houseId,
            t4.storefront_name storefrontName,
            t1.order_id orderId
        FROM
            dj_deliver_order_split t1,
            dj_basics_storefront t4
        WHERE
            t1.storefront_id = t4.id
        AND t1.house_id=#{houseId}
        AND EXISTS (
            SELECT
                1
            FROM
                dj_deliver_order_split_item t2
            WHERE
                t1.id = t2.order_split_id
            AND t2.data_status = 0
            AND t2.is_reservation_deliver = 1
            AND t2.reservation_deliver_time IS NOT NULL
        )
    </select>


    <select id="queryReserved" resultType="com.dangjia.acg.dto.delivery.AppointmentDTO">
        SELECT
            t.product_id productId,
            t.id as orderSplitItemId,
            t.storefront_id storefrontId,
            t.product_name productName,
            t.product_sn productSn,
            t.product_type productType,
            t.price price,
            IFNULL(t.image, t1.image) image,
            IFNULL(t.ask_count, 0) askCount,
            t1.prod_template_id productTemplateId,
            t.reservation_deliver_time AS reservationDeliverTime,
            t.unit_name as unitName,
            t.order_split_id as orderSplitId
        FROM
            dj_deliver_order_split_item t,
            dj_basics_storefront_product t1
        WHERE
            t.product_id = t1.id
        AND t.data_status = 0
        AND t.order_id =  #{orderId}
    </select>

    <!--取消预约-->
    <delete id="cancelBooking">
        DELETE dj_deliver_order_split a,
         dj_deliver_order_split_item b
        FROM
            dj_deliver_order_split a,
            dj_deliver_order_split_item b
        WHERE
            a.id = b.order_split_id
        AND a.id = #{orderSplitId}
    </delete>


    <select id="queryType" resultType="com.dangjia.acg.dto.member.WorkerTypeDTO" parameterType="java.lang.String">
        select
            cwt.type as type,
            chf.worker_type_id as workerTypeId,
            chf.work_steta as workSteta
        from
        dj_core_house_flow chf INNER JOIN
        dj_core_worker_type cwt on chf.worker_type_id = cwt.id
        where chf.house_id = #{houseId}
        ORDER BY chf.modify_date desc
    </select>

    <!--  查询当前用户的花费，根据类别汇总 -->
    <select id="searchDecorationCostList" resultType="com.dangjia.acg.dto.order.DecorationCostDTO">
        SELECT
            m.categoryId,
            m.categoryName,
            sum(actualPaymentPrice) actualPaymentPrice,
          sum(purchaseTotalPrice) purchaseTotalPrice
        FROM
            (
                SELECT
                    t5.id categoryId,
                    t5. NAME categoryName,
                    IFNULL(
                        t2.actual_payment_price,
                        IFNULL(
                            t2.total_price,
                            t2.price * t2.shop_count
                        )
                    ) actualPaymentPrice,
              0 purchaseTotalPrice
                FROM
                    dj_deliver_order t1,
                    dj_deliver_order_item t2,
                    dj_basics_storefront_product t3,
                    dj_basics_product_template t4,
                    dj_basics_goods_category t5
                WHERE
                    t1.id = t2.order_id
                AND t2.product_id = t3.id
                AND t3.prod_template_id = t4.id
                AND t4.category_id = t5.id
                AND t1.house_id = #{houseId}
                <if test="null!=labelValId and ''!=labelValId">
                    and FIND_IN_SET(#{labelValId} ,t5.category_label_ids)
                </if>
                UNION ALL
                    SELECT
                        t3.id categoryId,
                        t3.`name` categoryName,
                        IFNULL(t1.total_price, 0) actualPaymentPrice,
                IFNULL(t1.total_price, 0) purchaseTotalPrice
                    FROM
                        dj_actuary_budget_material t1,
                        dj_basics_goods t2,
                        dj_basics_goods_category t3
                    WHERE
                        t1.steta = 2
                    AND t1.goods_id = t2.id
                    AND t2.category_id = t3.id
                    AND t1.delete_state != 1
                    AND t1.product_id IS NULL
                    AND t1.house_id = #{houseId}
                    <if test="null!=labelValId and ''!=labelValId">
                        and FIND_IN_SET(#{labelValId} ,t3.category_label_ids)
                    </if>
                    AND EXISTS (
                        SELECT
                            1
                        FROM
                            dj_deliver_order t4
                        WHERE
                            t1.house_id = t4.house_id
                        AND t1.worker_type_id = t4.worker_type_id
                    )
            ) m
        group by m.categoryId,
            m.categoryName

    </select>
    <!--  查询当前用户的花费，具体详情花费 -->
    <select id="searchDecorationCostDetailList" resultType="com.dangjia.acg.dto.order.DecorationCostItemDTO">

        SELECT
          t5.category_id categoryId,
          t4.goods_id goodsId,
          t5.name goodsName,
          t2.product_id productId,
          t4.id productTemplateId,
          t2.product_name productName,
          t4.product_sn productSn,
          t4.image,
          t2.price price,
          t2.shop_count shopCount,
          IFNULL(t2.actual_payment_price,IFNULL(t2.total_price,t2.price*t2.shop_count)) actualPaymentPrice,
          1 steta,
          '' actuaryBudgetId
        FROM
            dj_deliver_order t1,
            dj_deliver_order_item t2,
            dj_basics_storefront_product t3,
            dj_basics_product_template t4,
            dj_basics_goods t5,
            dj_basics_goods_category t6
        WHERE
            t1.id = t2.order_id
        and t2.product_id=t3.id
        and t3.prod_template_id=t4.id
        and t4.goods_id=t5.id
        and t5.category_id = t6.id
        and t1.house_id=#{houseId}
        and t5.category_id=#{categoryId}
        <if test="null!=labelValId and ''!=labelValId">
            and FIND_IN_SET(#{labelValId} ,t6.category_label_ids)
        </if>
        union all
        SELECT
                t2.category_id categoryId,
                t2.id goodsId,
                t2.name goodsName,
                '' productId,
                '' productTemplateId,
                '' productName,
                '' productSn,
                '' image,
                t1.price,
                t1.shop_count shopCount,
                t1.total_price actualPaymentPrice,
                2 steta,
                t1.id actuaryBudgetId
            FROM
                dj_actuary_budget_material t1,
                dj_basics_goods t2,
                dj_basics_goods_category t3
            WHERE
                t1.steta = 2
            AND t1.goods_id = t2.id
            AND t2.category_id = t3.id
            AND t1.delete_state != 1
            AND t1.product_id IS NULL
            AND t1.house_id = #{houseId}
            and t2.category_id=#{categoryId}
            <if test="null!=labelValId and ''!=labelValId">
                and FIND_IN_SET(#{labelValId} ,t3.category_label_ids)
            </if>
            AND EXISTS (
                SELECT
                    1
                FROM
                    dj_deliver_order t4
                WHERE
                    t1.house_id = t4.house_id
                AND t1.worker_type_id = t4.worker_type_id
            )
    </select>

    <!--按类别标签汇总花费信息-->
    <select id="searchDecorationCategoryLabelList" resultType="com.dangjia.acg.dto.order.DecorationCostDTO">
        SELECT
            m.labelValId,
            m.labelValName,
            sum(actualPaymentPrice) actualPaymentPrice,
            sum(purchaseTotalPrice) purchaseTotalPrice
        FROM
            (
                SELECT
                    t5.id categoryId,
                    t5. NAME categoryName,
                    t6.id labelValId,
                    t6. NAME labelValName,
                    IFNULL(
                        t2.actual_payment_price,
                        IFNULL(
                            t2.total_price,
                            t2.price * t2.shop_count
                        )
                    ) actualPaymentPrice,
                    0 purchaseTotalPrice
                FROM
                    dj_deliver_order t1,
                    dj_deliver_order_item t2,
                    dj_basics_storefront_product t3,
                    dj_basics_product_template t4,
                    dj_basics_goods_category t5,
                    dj_basics_category_label t6
                WHERE
                    t1.id = t2.order_id
                AND t2.product_id = t3.id
                AND t3.prod_template_id = t4.id
                AND t4.category_id = t5.id
                AND t1.house_id = #{houseId}
                AND FIND_IN_SET(
                    t6.id,
                    t5.category_label_ids
                )
                UNION ALL
                    SELECT
                        t3.id categoryId,
                        t3.`name` categoryName,
                        t4.id labelValId,
                        t4. NAME labelValName,
                        IFNULL(t1.total_price, 0) actualPaymentPrice,
                        IFNULL(t1.total_price, 0) purchaseTotalPrice
                    FROM
                        dj_actuary_budget_material t1,
                        dj_basics_goods t2,
                        dj_basics_goods_category t3,
                        dj_basics_category_label t4
                    WHERE
                        t1.steta = 2
                    AND t1.goods_id = t2.id
                    AND t2.category_id = t3.id
                    AND t1.delete_state != 1
                    AND t1.product_id IS NULL
                    AND t1.house_id = #{houseId}
                    AND FIND_IN_SET(
                        t4.id,
                        t3.category_label_ids
                    )
                    AND EXISTS (
                        SELECT
                            1
                        FROM
                            dj_deliver_order t4
                        WHERE
                            t1.house_id = t4.house_id
                        AND t1.worker_type_id = t4.worker_type_id
                    )
            ) m
        GROUP BY
            m.labelValId,
            m.labelValName
    </select>

</mapper>