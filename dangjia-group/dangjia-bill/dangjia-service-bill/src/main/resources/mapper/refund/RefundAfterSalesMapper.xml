<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dangjia.acg.mapper.refund.RefundAfterSalesMapper">


    <select id="queryRefundOrderList" resultType="com.dangjia.acg.dto.refund.RefundOrderDTO">
        SELECT
            t1.storefont_id storefrontId,
            t1.id orderId,
            t1.address_id addressId,
            t1.house_id houseId,
            t1.business_order_number businessOrderNumber,
            t1.order_number orderNumber,
            t4.storefront_name storefrontName
        FROM
            dj_deliver_order t1,
            dj_pay_business_order t3,
            dj_basics_storefront t4,
            dj_member_address ma
        WHERE t1.business_order_number = t3.number
        and t1.storefont_id=t4.id
        AND t1.payment IS NOT NULL
        AND t3.state = 3
        and (t1.house_id=ma.house_id or t1.address_id=ma.id)
        and ma.member_id=#{memberId}
        <if test="null!=houseId and ''!=houseId">
            AND t1.house_id = #{houseId}
        </if>
        and exists (select 1 from dj_deliver_order_item t2 where t1.id=t2.order_id AND t2.shop_count > (IFNULL(t2.ask_count, 0)+IFNULL(t2.return_count,0)) AND t2.data_status = 0
        and t2.product_type in (0,1,3)
        <if test="null!=searchKey and ''!=searchKey">
            AND (t2.product_name LIKE CONCAT('%',#{searchKey},'%')
            or t1.order_number LIKE CONCAT('%',#{searchKey},'%'))
        </if>)
    </select>

    <select id="queryRefundOrderInfoById" resultType="com.dangjia.acg.dto.refund.RefundOrderDTO">
        SELECT
            t1.storefont_id storefrontId,
            t1.id orderId,
            t1.address_id addressId,
            t1.house_id houseId,
            t1.business_order_number businessOrderNumber,
            t1.order_number orderNumber,
            t4.storefront_name storefrontName,
            t4.system_logo storefrontIcon
        FROM
            dj_deliver_order t1,
            dj_pay_business_order t3,
            dj_basics_storefront t4
        WHERE t1.business_order_number = t3.number
        and t1.storefont_id=t4.id
        AND t1.payment IS NOT NULL
        AND t3.state = 3
        AND t1.id = #{orderId}
    </select>

    <select id="queryRefundOrderItemList" resultType="com.dangjia.acg.dto.refund.RefundOrderItemDTO">

        SELECT
            t.product_id productId,
            t.id orderItemId,
            t.storefont_id storefrontId,
            t.product_name productName,
            t.product_sn productSn,
            t.product_type productType,
            t.price price,
            IFNULL(t.image,t1.image) image,
            t.shop_count shopCount,
            IFNULL(t.ask_count,0) askCount,
            IFNULL(t.return_count,0) returnCount,
            (t.shop_count - (IFNULL(t.ask_count, 0)+IFNULL(t.return_count,0))) surplusCount,
            IFNULL(t.stevedorage_cost,0) stevedorageCost,
            IFNULL(t.transportation_cost,0) transportationCost,
            t1.prod_template_id productTemplateId,
            t1.is_upstairs_cost isUpstairsCost,
            IFNULL(t1.move_cost,0) moveCost
        FROM
            dj_deliver_order_item t,
            dj_basics_storefront_product t1,
            dj_deliver_order t2
        WHERE t.product_id =t1.id
        and t.order_id =  #{orderId}
        AND t.shop_count > (IFNULL(t.ask_count, 0)+IFNULL(t.return_count,0))
        and t.data_status = '0'
        and t.product_type in (0,1,3)
        and t.order_id=t2.id
        <if test="null!=searchKey and ''!=searchKey">
            AND (t.product_name LIKE CONCAT('%',#{searchKey},'%')
            or t2.order_number LIKE CONCAT('%',#{searchKey},'%'))
        </if>
    </select>

    <select id="queryRefundOrderItemInfo" resultType="com.dangjia.acg.dto.refund.RefundOrderItemDTO">
        SELECT
            t.product_id productId,
            t.id orderItemId,
            t.storefont_id storefrontId,
            t.product_name productName,
            t.product_sn productSn,
            t.product_type productType,
            t.price price,
            t.unit_name unitName,
            IFNULL(t.image,t1.image) image,
            t.shop_count shopCount,
            IFNULL(t.ask_count,0) askCount,
            IFNULL(t.return_count,0) returnCount,
            (t.shop_count - (IFNULL(t.ask_count, 0)+IFNULL(t.return_count,0))) surplusCount,
            IFNULL(t.stevedorage_cost,0) stevedorageCost,
            IFNULL(t.transportation_cost,0) transportationCost,
            t1.prod_template_id productTemplateId,
            t1.is_upstairs_cost isUpstairsCost,
            IFNULL(t1.move_cost,0) moveCost,
            t.discount_price discountPrice
        FROM
            dj_deliver_order_item t,
            dj_basics_storefront_product t1
        WHERE t.product_id =t1.id
        AND t.shop_count > (IFNULL(t.ask_count, 0)+IFNULL(t.return_count,0))
        and t.data_status = '0'
        AND t.id = #{orderItemId}
    </select>




    <!--查询历史退货单表-->
    <select id="queryRefundOnlyHistoryOrderList" resultType="com.dangjia.acg.dto.refund.RefundRepairOrderDTO">

        SELECT
            t.id repairMendOrderId,
            t.storefront_id storefrontId,
            t1.storefront_name storefrontName,
            t1.system_logo storefrontIcon,
            t1.mobile storefrontMobile,
            t.house_id houseId,
            t.number repairOrderNum,
            IFNULL(t.total_stevedorage_cost,0) totalStevedorageCost,
            IFNULL(t.carriage,0) carriage,
            t.create_date applyDate,
            t.apply_member_id applyMemberId,
            t2.`name` applyMemberName,
            IFNULL(t.actual_total_amount,t.total_amount+IFNULL(t.carriage,0)) actualTotalAmount,
            t.total_amount totalAmount,
            t.state,
            t.type,
            t.image_arr imageArr
        FROM
            dj_repair_mend_order t,
            dj_basics_storefront t1,
            dj_member t2,
            dj_member_address ma
        where t.storefront_id=t1.id
        and t.apply_member_id=t2.id
        and (t.house_id=ma.house_id or t.address_id=ma.id)
        and ma.member_id=#{memberId}
        <if test="null!=houseId and ''!=houseId">
            and t.house_id=#{houseId}
        </if>
        <if test="type ==4 ">
            and t.type in(4,6)
        </if>
        <if test="type !=4">
            and t.type=#{type}
        </if>

        and t.state<![CDATA[<>]]>0
        order by t.create_date desc
    </select>

    <select id="queryRefundOnlyHistoryOrderMaterialList"  resultType="com.dangjia.acg.dto.refund.RefundRepairOrderMaterialDTO">

        SELECT
            t.mend_order_id repairMendOrderId,
            t.id repairOrderMaterialId,
            t.storefront_id storefrontId,
            t.product_id productId,
            t.product_name productName,
            t.product_sn productSn,
            t.product_type productType,
            t.price price,
            t.unit_name unitName,
            IFNULL((CASE WHEN t2.shipping_state = 7 THEN t.shop_count
            ELSE t.actual_count END
            ),t.shop_count) returnCount,
            IFNULL(t.stevedorage_cost,0) stevedorageCost,
            IFNULL(t.transportation_cost,0) transportationCost,
            IFNULL(t.image,t1.image) image,
            t1.prod_template_id productTemplateId,
            t.order_item_id orderItemId
        FROM
            dj_repair_mend_materiel t
        INNER JOIN dj_basics_storefront_product t1 on t.product_id=t1.id
        LEFT JOIN dj_repair_mend_deliver t2 on t.repair_mend_deliver_id=t2.id
        where t.mend_order_id=#{repairMendOrderId}
        <if test="null!=mendDeliverId and ''!=mendDeliverId">
            and t.repair_mend_deliver_id=#{mendDeliverId}
        </if>
    </select>
    <!-- 根据退货单申请单ID查询退货单信息 -->
    <select id="queryRefundOnlyHistoryOrderInfo" resultType="com.dangjia.acg.dto.refund.RefundRepairOrderDTO">
        SELECT
            t.id repairMendOrderId,
            t.storefront_id storefrontId,
            t1.storefront_name storefrontName,
            t1.mobile storefrontMobile,
            t1.system_logo storefrontIcon,
            t.house_id houseId,
            t.number repairOrderNum,
            IFNULL(t.total_stevedorage_cost,0) totalStevedorageCost,
            IFNULL(t.carriage,0) carriage,
            t.create_date applyDate,
            t.apply_member_id applyMemberId,
            t2.`name` applyMemberName,
            t.actual_total_amount actualTotalAmount,
            t.total_amount totalAmount,
            t.state,
            t.type,
            t.image_arr imageArr,
            t.room_charge roomCharge,
            t.create_date createDate
        FROM
            dj_repair_mend_order t,
            dj_basics_storefront t1,
            dj_member t2
        where t.storefront_id=t1.id
        and t.apply_member_id=t2.id
        and t.id=#{repairMendOrderId}
        and t.state<![CDATA[<>]]>0
    </select>

    <select id="queryMendSplitOrderInfo"  resultType="com.dangjia.acg.dto.refund.RefundRepairOrderDTO">
        SELECT
            t.id mendDeliverId,
            t3.id repairMendOrderId,
            t.storefront_id storefrontId,
            t1.storefront_name storefrontName,
            t1.mobile storefrontMobile,
            t1.system_logo storefrontIcon,
            t.house_id houseId,
            t.number repairOrderNum,
            IFNULL(t.stevedorage_cost,0) totalStevedorageCost,
            IFNULL(t.delivery_fee,0) carriage,
            t3.create_date applyDate,
            t.apply_money actualTotalAmount,
            t.total_amount totalAmount,
            t.shipping_state state,
            t.create_date createDate
        FROM
            dj_repair_mend_deliver t,
            dj_basics_storefront t1,
            dj_repair_mend_order t3
        where t.storefront_id=t1.id
        and t.mend_order_id=t3.id
        and t.id=#{mendDeliverId}
    </select>

    <select id="totalProductDimensionMendDetail" resultType="java.util.Map">
       SELECT
        sum(tt.price * tt.returnCount) totalPrice,
        sum(tt.transportation_cost) totalStevedorageCost,
        sum(tt.stevedorage_cost) carriage,
        sum(tt.price * tt.returnCount) - sum(tt.transportation_cost) - sum(tt.stevedorage_cost) totalAmount
    FROM
        (
            SELECT
                IFNULL(
                    (
                        CASE
                        WHEN s.shipping_state = 7 THEN
                            t.shop_count
                        ELSE
                            t.actual_count,
                        END
                    ),
                    t.shop_count
                ) AS returnCount,
                t.cost AS supPrice,
                t.price AS price,
                IFNULL(t.transportation_cost, 0) transportation_cost,
                IFNULL(t.stevedorage_cost, 0) stevedorage_cost
            FROM
                dj_repair_mend_deliver s
            INNER JOIN dj_repair_mend_materiel t ON s.id = t.repair_mend_deliver_id
            WHERE
                s.id = #{mendDeliverId}
        ) tt
    </select>



    <select id="queryWorkerProductList" resultType="com.dangjia.acg.dto.refund.RefundOrderItemDTO">
        SELECT
            t.product_id productId,
            t.id orderItemId,
            t.storefont_id storefrontId,
            t.product_name productName,
            t.product_sn productSn,
            t.product_type productType,
            t.price price,
            t.unit_name unitName,
            IFNULL(t.image, t1.image) image,
            t.shop_count shopCount,
            IFNULL(t.ask_count, 0) askCount,
            IFNULL(t.return_count, 0) returnCount,
            (
            t.shop_count - (
            IFNULL(t.ask_count, 0) + IFNULL(t.return_count, 0)
            )
            ) surplusCount,
            IFNULL(t.stevedorage_cost, 0) stevedorageCost,
            IFNULL(t.transportation_cost, 0) transportationCost,
            t1.prod_template_id productTemplateId,
            t1.is_upstairs_cost isUpstairsCost,
            IFNULL(t1.move_cost, 0) moveCost,
            ddt.house_id
        FROM
            dj_deliver_order ddt,
            dj_deliver_order_item t,
            dj_basics_storefront_product t1,
            dj_basics_product_template pt,
            dj_basics_goods bg
        WHERE
            ddt.id = t.order_id
        AND t.product_id = t1.id
        AND ddt.house_id = #{houseId}
        AND ddt.worker_type_id = 6
        AND t1.prod_template_id = pt.id
        and pt.goods_id=bg.id
        and bg.type=2
        AND NOT EXISTS (
            SELECT
                1
            FROM
                dj_basics_technology t1,
                dj_matter_technology_record t2,
                dj_core_house_flow_apply t3
            WHERE
                FIND_IN_SET(t1.id, pt.technology_ids)
            AND t2.technology_Id = t1.id
            AND t2.house_flow_apply_id = t3.id
            AND t3.worker_type_id = #{workerTypeId}
            AND t2.house_id = #{houseId}
            AND t1.type IN (2, 3)
        )
        <if test="null!=searchKey and ''!=searchKey">
            AND t.product_name LIKE CONCAT('%',#{searchKey},'%')
        </if>
    </select>

</mapper>