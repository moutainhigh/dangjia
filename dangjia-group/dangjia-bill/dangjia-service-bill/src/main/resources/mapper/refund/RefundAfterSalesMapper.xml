<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dangjia.acg.mapper.refund.RefundAfterSalesMapper">


    <select id="queryRefundOrderList" resultType="com.dangjia.acg.dto.refund.RefundOrderDTO">
        SELECT
            t1.storefont_id storefrontId,
            t1.id orderId,
            t1.address_id addressId,
            t1.house_id houseId,
            t1.business_order_number businessOrderNumber,
            t1.order_number orderNumber,
            t4.storefront_name storefrontName
        FROM
            dj_deliver_order t1,
            dj_pay_business_order t3,
            dj_basics_storefront t4
        WHERE t1.business_order_number = t3.number
        and t1.storefont_id=t4.id
        AND t1.payment IS NOT NULL
        AND t3.state = 3
        AND t1.house_id = #{houseId}
        and exists (select 1 from dj_deliver_order_item t2 where t1.id=t2.order_id AND t2.shop_count > (IFNULL(t2.ask_count, 0)+IFNULL(t2.return_count,0)) AND t2.data_status = 0
        <if test="null!=searchKey and ''!=searchKey">
            AND (t2.product_name LIKE CONCAT('%',#{searchKey},'%')
            or t1.order_number LIKE CONCAT('%',#{searchKey},'%'))
        </if>)
    </select>

    <select id="queryRefundOrderInfoById" resultType="com.dangjia.acg.dto.refund.RefundOrderDTO">
        SELECT
            t1.storefont_id storefrontId,
            t1.id orderId,
            t1.address_id addressId,
            t1.house_id houseId,
            t1.business_order_number businessOrderNumber,
            t1.order_number orderNumber,
            t4.storefront_name storefrontName,
            t4.system_logo storefrontIcon
        FROM
            dj_deliver_order t1,
            dj_pay_business_order t3,
            dj_basics_storefront t4
        WHERE t1.business_order_number = t3.number
        and t1.storefont_id=t4.id
        AND t1.payment IS NOT NULL
        AND t3.state = 3
        AND t1.id = #{orderId}
    </select>

    <select id="queryRefundOrderItemList" resultType="com.dangjia.acg.dto.refund.RefundOrderItemDTO">

        SELECT
            t.product_id productId,
            t.id orderItemId,
            t.storefont_id storefrontId,
            t.product_name productName,
            t.product_sn productSn,
            t.product_type productType,
            t.price price,
            IFNULL(t.image,t1.image) image,
            t.shop_count shopCount,
            IFNULL(t.ask_count,0) askCount,
            IFNULL(t.return_count,0) returnCount,
            (t.shop_count - (IFNULL(t.ask_count, 0)+IFNULL(t.return_count,0))) surplusCount,
            IFNULL(t.stevedorage_cost,0) stevedorageCost,
            IFNULL(t.transportation_cost,0) transportationCost,
            t1.prod_template_id productTemplateId,
            t1.is_upstairs_cost isUpstairsCost,
            IFNULL(t1.move_cost,0) moveCost
        FROM
            dj_deliver_order_item t,
            dj_basics_storefront_product t1,
            dj_deliver_order t2
        WHERE t.product_id =t1.id
        and t.order_id =  #{orderId}
        AND t.shop_count > (IFNULL(t.ask_count, 0)+IFNULL(t.return_count,0))
        and t.data_status = '0'
        and t.order_id=t2.id
        <if test="null!=searchKey and ''!=searchKey">
            AND (t.product_name LIKE CONCAT('%',#{searchKey},'%')
            or t2.order_number LIKE CONCAT('%',#{searchKey},'%'))
        </if>
    </select>

    <select id="queryRefundOrderItemInfo" resultType="com.dangjia.acg.dto.refund.RefundOrderItemDTO">
        SELECT
            t.product_id productId,
            t.id orderItemId,
            t.storefont_id storefrontId,
            t.product_name productName,
            t.product_sn productSn,
            t.product_type productType,
            t.price price,
            t.unit_name unitName,
            IFNULL(t.image,t1.image) image,
            t.shop_count shopCount,
            IFNULL(t.ask_count,0) askCount,
            IFNULL(t.return_count,0) returnCount,
            (t.shop_count - (IFNULL(t.ask_count, 0)+IFNULL(t.return_count,0))) surplusCount,
            IFNULL(t.stevedorage_cost,0) stevedorageCost,
            IFNULL(t.transportation_cost,0) transportationCost,
            t1.prod_template_id productTemplateId,
            t1.is_upstairs_cost isUpstairsCost,
            IFNULL(t1.move_cost,0) moveCost
        FROM
            dj_deliver_order_item t,
            dj_basics_storefront_product t1
        WHERE t.product_id =t1.id
        AND t.shop_count > (IFNULL(t.ask_count, 0)+IFNULL(t.return_count,0))
        and t.data_status = '0'
        AND t.id = #{orderItemId}
    </select>


    <!--查询历史退货单表-->
    <select id="queryRefundOnlyHistoryOrderList" resultType="com.dangjia.acg.dto.refund.RefundRepairOrderDTO">
        SELECT
            t.id repairMendOrderId,
            t.storefront_id storefrontId,
            t1.storefront_name storefrontName,
            t1.system_logo storefrontIcon,
            t.house_id houseId,
            t.number repairOrderNum,
            IFNULL(t.total_stevedorage_cost,0) totalStevedorageCost,
            IFNULL(t.carriage,0) carriage,
            t.create_date applyDate,
            t.apply_member_id applyMemberId,
            t2.`name` applyMemberName,
            IFNULL(t.actual_total_amount,t.total_amount+IFNULL(t.carriage,0)) actualTotalAmount,
            t.total_amount totalAmount,
            t.state,
            t.type,
            t.image_arr imageArr
        FROM
            dj_repair_mend_order t,
            dj_basics_storefront t1,
            dj_member t2
        where t.storefront_id=t1.id
        and t.apply_member_id=t2.id
        and t.house_id=#{houseId}
        and t.type=#{type}
        and t.state<![CDATA[<>]]>0
        order by t.create_date desc
    </select>

    <select id="queryRefundOnlyHistoryOrderMaterialList"  resultType="com.dangjia.acg.dto.refund.RefundRepairOrderMaterialDTO">
        SELECT
            t.mend_order_id repairMendOrderId,
          t.id repairOrderMaterialId,
          t.storefront_id storefrontId,
          t.product_id productId,
          t.product_name productName,
          t.product_sn productSn,
          t.product_type productType,
          t.price price,
          t.unit_name unitName,
          t.shop_count returnCount,
          IFNULL(t.stevedorage_cost,0) stevedorageCost,
          IFNULL(t.transportation_cost,0) transportationCost,
          IFNULL(t.image,t1.image) image,
          t1.prod_template_id productTemplateId,
          t.order_item_id orderItemId
        FROM
            dj_repair_mend_materiel t,
          dj_basics_storefront_product t1
        where t.product_id = t1.id
        and t.mend_order_id=#{repairMendOrderId}
    </select>
    <!-- 根据退货单ID查询退货单信息 -->
    <select id="queryRefundOnlyHistoryOrderInfo" resultType="com.dangjia.acg.dto.refund.RefundRepairOrderDTO">
        SELECT
            t.id repairMendOrderId,
            t.storefront_id storefrontId,
            t1.storefront_name storefrontName,
            t1.system_logo storefrontIcon,
            t.house_id houseId,
            t.number repairOrderNum,
            IFNULL(t.total_stevedorage_cost,0) totalStevedorageCost,
            IFNULL(t.carriage,0) carriage,
            t.create_date applyDate,
            t.apply_member_id applyMemberId,
            t2.`name` applyMemberName,
            IFNULL(t.actual_total_amount,t.total_amount+IFNULL(t.carriage,0)) actualTotalAmount,
            t.total_amount totalAmount,
            t.state,
            t.type,
            t.image_arr imageArr
        FROM
            dj_repair_mend_order t,
            dj_basics_storefront t1,
            dj_member t2
        where t.storefront_id=t1.id
        and t.apply_member_id=t2.id
        and t.id=#{repairMendOrderId}
        and t.state<![CDATA[<>]]>0
    </select>

    <!--获取符合条件的数据-->
    <select id="queryRefundJobList" resultType="java.util.Map">
      <![CDATA[
        SELECT
          tt1.id repairMendOrderId,tt1.total_amount totalAmount,tt1.apply_member_id memberId,tt2.node_code nodeCode
        FROM
            dj_repair_mend_order tt1,
            dj_deliver_order_progress tt2
        WHERE
           tt1.id = tt2.progress_order_id
        and tt2.create_date=(select max(t.create_date) from dj_deliver_order_progress t where t.progress_order_id=tt2.progress_order_id)
        and tt2.node_code=#{nodeCode}
        and tt1.type in(4,5)
        and tt2.create_date<date_add(now(), interval -(select param_value from dj_config where param_key=#{paramNodeKey}) hour)
        ]]>
    </select>

</mapper>